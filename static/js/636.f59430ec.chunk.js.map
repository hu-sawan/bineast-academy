{"version":3,"file":"static/js/636.f59430ec.chunk.js","mappings":"+KAwDA,QA9CA,SAAoBA,GAAmD,IAAlD,aAAEC,EAAY,YAAEC,GAA+BF,EAChE,MAAMG,GAAaC,EAAAA,EAAAA,QAAuB,OACpC,MAAEC,IAAUC,EAAAA,EAAAA,KAkBlB,OAhBAC,EAAAA,EAAAA,YAAU,KACN,SAASC,EAAmBC,GAEpBN,EAAWO,UACVP,EAAWO,QAAQC,SAASF,EAAMG,SAEnCX,GAAa,EAErB,CAGA,OADAY,SAASC,iBAAiB,YAAaN,GAChC,KACHK,SAASE,oBAAoB,YAAaP,EAAmB,CAChE,GACF,CAACL,EAAYF,KAGZe,EAAAA,EAAAA,KAAA,OAAKC,UAAS,gBAAAC,OAAkBb,GAAQc,UACpCC,EAAAA,EAAAA,MAAA,OAAKC,IAAKlB,EAAYc,UAAU,wBAAuBE,SAAA,EACnDH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,mBACJC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iCAAgCE,SAAA,EAC3CH,EAAAA,EAAAA,KAAA,QACIC,UAAU,gBACVK,QAASA,KACLpB,GAAY,GACZD,GAAa,EAAM,EACrBkB,SACL,aAGDH,EAAAA,EAAAA,KAAA,QACIC,UAAU,gBACVK,QAASA,IAAMrB,GAAa,GAAOkB,SACtC,kBAOrB,C,gDCjDA,MA8BA,EA9BenB,IAAuC,IAAtC,MAAEuB,EAAK,SAAEC,GAAuBxB,EAC5C,OACIoB,EAAAA,EAAAA,MAAA,OACIK,MAAO,CACHC,aAAc,QAChBP,SAAA,EAEFH,EAAAA,EAAAA,KAAA,MACIS,MAAO,CACHE,MAAO,4BACPC,SAAU,OACVC,WAAY,OACZH,aAAc,OAChBP,SAEDI,KAELP,EAAAA,EAAAA,KAAA,MACIS,MAAO,CACHE,MAAO,gCACPE,WAAY,MACZD,SAAU,QACZT,SAEDK,MAEH,C,iFCFd,QAlBA,SAAkBxB,GAKE,IALD,QACf8B,EAAO,SACPC,EAAW,WAAU,KACrBC,GAAO,EAAK,MACZC,GAAQ,GACKjC,EACb,OACIgB,EAAAA,EAAAA,KAAA,OAAKC,UAAS,cAAAC,OAAgBc,GAAQ,OAAM,KAAAd,OAAIe,GAAS,UAAWd,UAChEC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,sBAAqBE,SAAA,EAChCH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAME,UACjBH,EAAAA,EAAAA,KAACkB,EAAAA,EAAe,CAACC,KAAMC,EAAAA,QAE1BN,MAIjB,C,mLCIA,QApBA,SAAkB9B,GAAuD,IAAtD,MAAEqC,EAAK,aAAEC,EAAY,WAAEC,GAA4BvC,EAClE,MAAM,MAAEK,IAAUC,EAAAA,EAAAA,KAClB,OACIU,EAAAA,EAAAA,KAAA,OAAKC,UAAS,cAAAC,OAAgBb,GAAQc,UAClCH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBE,UAChCH,EAAAA,EAAAA,KAAA,QACI,eAAa,SACbC,UAAU,wBACVK,QAASA,IAAMgB,GAAa,GAAOnB,UAEnCH,EAAAA,EAAAA,KAACkB,EAAAA,EAAe,CACZT,MAAO,CAAEe,QAAS,SAClBL,KAAMC,EAAAA,WAM9B,E,cC+DA,QA5EA,SAAqBpC,GAAoD,IAAnD,MAAEqC,EAAK,OAAEI,EAAM,WAAEF,GAA+BvC,EAClE,MAAM,MAAEuB,EAAK,YAAEmB,EAAW,kBAAEC,EAAiB,QAAEC,GAAYP,GACpDQ,EAAW5C,IAAgB6C,EAAAA,EAAAA,WAAS,IACpCC,EAAU7C,IAAe4C,EAAAA,EAAAA,WAAS,IAClCE,EAAWV,IAAgBQ,EAAAA,EAAAA,WAAS,GA8B3C,OACI1B,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeE,SAAA,CACzB6B,IACGhC,EAAAA,EAAAA,KAACiC,EAAS,CACNZ,MAAOA,EACPC,aAAcA,EACdC,WAAYA,IAGnBM,IACG7B,EAAAA,EAAAA,KAACkC,EAAAA,QAAW,CACRjD,aAAcA,EACdC,YAAaA,EACbqC,WAAYA,KAGpBvB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBE,UAC/BH,EAAAA,EAAAA,KAACkB,EAAAA,EAAe,CAACC,KAAMgB,EAAAA,SAE3B/B,EAAAA,EAAAA,MAAA,OAAKH,UAAU,yBAAwBE,SAAA,EACnCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAAG,SAAKI,KACLP,EAAAA,EAAAA,KAAA,KAAAG,SAAIuB,QAER1B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAAiCE,UAC5CC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4CAA2CE,SAAA,CAAC,aAC5CwB,EAAkB,oBAIzCvB,EAAAA,EAAAA,MAAA,OAAKH,UAAU,yBAAwBE,SAAA,EACnCH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAOK,QAASA,IAAMgB,GAAa,GAAMnB,UACrDH,EAAAA,EAAAA,KAACkB,EAAAA,EAAe,CAACC,KAAMiB,EAAAA,SAE3BpC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,SAASK,QAASA,IAAMrB,GAAa,GAAMkB,UACvDH,EAAAA,EAAAA,KAACkB,EAAAA,EAAe,CAACC,KAAMkB,EAAAA,aAK3C,EC6BA,QA1GA,WACI,MAAOC,EAASC,IAAcT,EAAAA,EAAAA,WAAkB,IACzCU,EAAOC,IAAYX,EAAAA,EAAAA,UAAiB,KACpCL,EAAQiB,IAAaZ,EAAAA,EAAAA,UAAyB,KAC9Ca,EAASpB,IAAcO,EAAAA,EAAAA,WAAkB,IACzCc,EAAcC,IAAmBf,EAAAA,EAAAA,UAAiB,KACnD,SAAEgB,IAAaC,EAAAA,EAAAA,OACf,KAAEC,IAASC,EAAAA,EAAAA,KACXC,GAAcC,EAAAA,EAAAA,KAEdC,GAAWC,EAAAA,EAAAA,MAkDjB,OAhDA9D,EAAAA,EAAAA,YAAU,KACN,IAAI+D,EAAMF,EAASG,SAASC,MAAM,KAElC,KAA+B,KAAxBF,EAAIA,EAAIG,OAAS,IAAWH,EAAII,MACvCJ,EAAII,MAEJb,EAAgBS,EAAIK,KAAK,KAAK,GAC/B,CAACP,EAASG,YAEbhE,EAAAA,EAAAA,YAAU,KAmCFuD,EAlCgBc,WAChB,IACI,MAAMC,QAAiBC,MAAM,oCAAD5D,OACY4C,EAAQ,KAAA5C,OACxC8C,GAAoC,eAA5BA,EAAKe,KAAKC,cACZhB,EAAKiB,GACL,IAEV,CACIC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,iBAAkBjB,KAKxBkB,QAAaP,EAASQ,OAE5B,GAAwB,MAApBR,EAASS,OAAgB,MAAMC,MAAMH,EAAKtD,SAE9C4B,EAAU0B,GACV7B,GAAW,GACS,IAAhB6B,EAAKX,QAAchB,EAAS,sBACpC,CAAE,MAAO+B,GACLjC,GAAW,GACPiC,aAAeD,MACf9B,EAAS+B,EAAI1D,SAEb2B,EAAS,kCAEjB,GAGUgC,GACT/B,EAAU,GAAG,GACnB,CAACI,EAAUE,EAAML,EAASO,KAGzB9C,EAAAA,EAAAA,MAAA,OAAKH,UAAU,mBAAkBE,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,2BAA0BE,SAAA,EACrCH,EAAAA,EAAAA,KAAC0E,EAAAA,GAAI,CAACC,GAAI/B,EAAazC,UACnBH,EAAAA,EAAAA,KAAA,OACI,eAAa,OACbC,UAAU,+CAA8CE,UAExDH,EAAAA,EAAAA,KAACkB,EAAAA,EAAe,CAACC,KAAMyD,EAAAA,WAI/BxE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oCAAmCE,SAAA,EAC9CH,EAAAA,EAAAA,KAAC6E,EAAAA,EAAM,CACHtE,MAAM,SACNC,SAAS,qEAGTJ,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wBAAuBE,SAAA,EAClCH,EAAAA,EAAAA,KAACkB,EAAAA,EAAe,CAACC,KAAM2D,EAAAA,MAAU,sBAMjD9E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BE,SACpCmC,GAAWE,GACRxC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCE,SAC5CmC,GAAUtC,EAAAA,EAAAA,KAAC+E,EAAAA,QAAO,KAAM/E,EAAAA,EAAAA,KAACgF,EAAAA,QAAS,CAAClE,QAAS0B,MAGjDf,EAAOwD,KAAK5D,IAEJrB,EAAAA,EAAAA,KAACkF,EAAY,CACT7D,MAAOA,EACPI,OAAQA,EACRF,WAAYA,UAQ5C,C","sources":["components/confrimCard/ConfirmCard.tsx","components/dashboard/header/Header.tsx","components/error/ErrorCard.tsx","components/dashboard/editVideo/EditVideo.tsx","components/dashboard/videoDisplay/VideoDisplay.tsx","pages/dashboard/videos/Videos.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport \"./ConfirmCard.scss\";\r\nimport { useTheme } from \"../../contexts/ThemeContext\";\r\n\r\ninterface ConfrimCardProps {\r\n    setIsDelete: (state: boolean) => void;\r\n    setIsConfirm: (state: boolean) => void;\r\n    setRefresh: (state: any) => void;\r\n}\r\n\r\nfunction ConfirmCard({ setIsConfirm, setIsDelete }: ConfrimCardProps) {\r\n    const wrapperRef = useRef<HTMLDivElement>(null);\r\n    const { theme } = useTheme();\r\n\r\n    useEffect(() => {\r\n        function handleClickOutside(event: MouseEvent) {\r\n            if (\r\n                wrapperRef.current &&\r\n                !wrapperRef.current.contains(event.target as Node)\r\n            ) {\r\n                setIsConfirm(false);\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [wrapperRef, setIsConfirm]);\r\n\r\n    return (\r\n        <div className={`confirm-card ${theme}`}>\r\n            <div ref={wrapperRef} className=\"confirm-card__wrapper\">\r\n                <h4>Are you sure?</h4>\r\n                <div className=\"confirm-card__wrapper__control\">\r\n                    <span\r\n                        className=\"is-easy hover\"\r\n                        onClick={() => {\r\n                            setIsDelete(true);\r\n                            setIsConfirm(false);\r\n                        }}\r\n                    >\r\n                        Confirm\r\n                    </span>\r\n                    <span\r\n                        className=\"is-hard hover\"\r\n                        onClick={() => setIsConfirm(false)}\r\n                    >\r\n                        Cancel\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmCard;\r\n","interface HeaderProps {\r\n    title: string;\r\n    subtitle: string;\r\n}\r\n\r\nconst Header = ({ title, subtitle }: HeaderProps) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                marginBottom: \"15px\",\r\n            }}\r\n        >\r\n            <h2\r\n                style={{\r\n                    color: \"var(--primary-text-color)\",\r\n                    fontSize: \"32px\",\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: \"5px\",\r\n                }}\r\n            >\r\n                {title}\r\n            </h2>\r\n            <h5\r\n                style={{\r\n                    color: \"var(--light-green-text-color)\",\r\n                    fontWeight: \"400\",\r\n                    fontSize: \"16px\",\r\n                }}\r\n            >\r\n                {subtitle}\r\n            </h5>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import \"./ErrorCard.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface ErrorCardProps {\r\n    message: string;\r\n    fill?: boolean;\r\n    onTop?: boolean;\r\n    position?: \"relative\" | \"absolute\";\r\n}\r\n\r\nfunction ErrorCard({\r\n    message,\r\n    position = \"absolute\",\r\n    fill = false,\r\n    onTop = false,\r\n}: ErrorCardProps) {\r\n    return (\r\n        <div className={`error-card ${fill && \"fill\"} ${onTop && \"on-top\"}`}>\r\n            <div className=\"error-card__wrapper\">\r\n                <div className=\"icon\">\r\n                    <FontAwesomeIcon icon={faXmark} />\r\n                </div>\r\n                {message}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorCard;\r\n","import \"./EditVideo.scss\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useTheme } from \"../../../contexts/ThemeContext\";\r\n\r\ninterface EditVideoProps {\r\n    video: any;\r\n    setIsEditing: (state: boolean) => void;\r\n    setRefresh: (state: any) => void;\r\n}\r\n\r\nfunction EditVideo({ video, setIsEditing, setRefresh }: EditVideoProps) {\r\n    const { theme } = useTheme();\r\n    return (\r\n        <div className={`edit-video ${theme}`}>\r\n            <div className=\"edit-video__wrapper\">\r\n                <span\r\n                    data-tooltip=\"Cancel\"\r\n                    className=\"tooltip bottom cancel\"\r\n                    onClick={() => setIsEditing(false)}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        style={{ display: \"block\" }}\r\n                        icon={faXmark}\r\n                    />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditVideo;\r\n","import \"./VideoDisplay.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { CourseVideos } from \"../../../types/types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faYoutube } from \"@fortawesome/free-brands-svg-icons\";\r\nimport EditVideo from \"../editVideo/EditVideo\";\r\nimport ConfirmCard from \"../../confrimCard/ConfirmCard\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\n\r\ninterface VideoDisplayProps {\r\n    video: CourseVideos;\r\n    videos: CourseVideos[];\r\n    setRefresh: (state: any) => void;\r\n}\r\n\r\nfunction VideoDisplay({ video, videos, setRefresh }: VideoDisplayProps) {\r\n    const { title, description, durationInMinutes, orderNb } = video;\r\n    const [isConfirm, setIsConfirm] = useState(false);\r\n    const [isDelete, setIsDelete] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    // const accessToken = useAccessToken();\r\n\r\n    // useEffect(() => {\r\n    //     const deleteCourse = async () => {\r\n    //         try {\r\n    //             const response = await fetch(\r\n    //                 process.env.REACT_APP_API_URL + `/api/courses/${id}`,\r\n    //                 {\r\n    //                     method: \"DELETE\",\r\n    //                     headers: {\r\n    //                         \"content-type\": \"application/json\",\r\n    //                         \"x-access-token\": accessToken,\r\n    //                     },\r\n    //                 }\r\n    //             );\r\n\r\n    //             if (response.ok) {\r\n    //                 setRefresh((prev: boolean) => !prev);\r\n    //                 setIsDelete(false);\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.log(error);\r\n    //         }\r\n    //     };\r\n\r\n    //     if (isDelete) deleteCourse();\r\n    // }, [isDelete, accessToken, id, setRefresh]);\r\n\r\n    return (\r\n        <div className=\"video-display\">\r\n            {isEditing && (\r\n                <EditVideo\r\n                    video={video}\r\n                    setIsEditing={setIsEditing}\r\n                    setRefresh={setRefresh}\r\n                />\r\n            )}\r\n            {isConfirm && (\r\n                <ConfirmCard\r\n                    setIsConfirm={setIsConfirm}\r\n                    setIsDelete={setIsDelete}\r\n                    setRefresh={setRefresh}\r\n                />\r\n            )}\r\n            <div className=\"video-display__img\">\r\n                <FontAwesomeIcon icon={faYoutube} />\r\n            </div>\r\n            <div className=\"video-display__content\">\r\n                <div>\r\n                    <h1>{title}</h1>\r\n                    <p>{description}</p>\r\n                </div>\r\n                <div className=\"video-display__content__details\">\r\n                    <div className=\"video-display__content__details__duration\">\r\n                        Duration: {durationInMinutes} minutes\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"video-display__control\">\r\n                <span className=\"edit\" onClick={() => setIsEditing(true)}>\r\n                    <FontAwesomeIcon icon={faEdit} />\r\n                </span>\r\n                <span className=\"delete\" onClick={() => setIsConfirm(true)}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoDisplay;\r\n","import \"./Videos.scss\";\r\nimport { Link, useLocation, useParams } from \"react-router-dom\";\r\nimport Header from \"../../../components/dashboard/header/Header\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { CourseVideos } from \"../../../types/types\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\nimport Loading from \"../../../components/loading/Loading\";\r\nimport ErrorCard from \"../../../components/error/ErrorCard\";\r\nimport VideoDisplay from \"../../../components/dashboard/videoDisplay/VideoDisplay\";\r\n\r\nfunction Videos() {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<string>(\"\");\r\n    const [videos, setVideos] = useState<CourseVideos[]>([]);\r\n    const [refresh, setRefresh] = useState<boolean>(false);\r\n    const [prevLocation, setPrevLocation] = useState<string>(\"\");\r\n    const { courseId } = useParams();\r\n    const { user } = useAuth();\r\n    const accessToken = useAccessToken();\r\n\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        let arr = location.pathname.split(\"/\");\r\n\r\n        while (arr[arr.length - 1] === \"\") arr.pop();\r\n        arr.pop();\r\n\r\n        setPrevLocation(arr.join(\"/\"));\r\n    }, [location.pathname]);\r\n\r\n    useEffect(() => {\r\n        const fetchVideos = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    `http://localhost:5050/api/videos/${courseId}/${\r\n                        user && user.role.toLowerCase() === \"instructor\"\r\n                            ? user.id\r\n                            : \"\"\r\n                    }`,\r\n                    {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                const data = await response.json();\r\n\r\n                if (response.status !== 200) throw Error(data.message);\r\n\r\n                setVideos(data);\r\n                setLoading(false);\r\n                if (data.length === 0) setError(\"No videos available\");\r\n            } catch (err) {\r\n                setLoading(false);\r\n                if (err instanceof Error) {\r\n                    setError(err.message);\r\n                } else {\r\n                    setError(\"Error fetching data from server\");\r\n                }\r\n            }\r\n        };\r\n\r\n        if (courseId) fetchVideos();\r\n        else setVideos([]);\r\n    }, [courseId, user, refresh, accessToken]);\r\n\r\n    return (\r\n        <div className=\"dashboard-course\">\r\n            <div className=\"dashboard-course__header\">\r\n                <Link to={prevLocation}>\r\n                    <div\r\n                        data-tooltip=\"Back\"\r\n                        className=\"dashboard-course__header__nav tooltip bottom\"\r\n                    >\r\n                        <FontAwesomeIcon icon={faArrowLeft} />\r\n                    </div>\r\n                </Link>\r\n\r\n                <div className=\"dashboard-course__header__details\">\r\n                    <Header\r\n                        title=\"Videos\"\r\n                        subtitle=\"In this page you can view and add videos to the selected course\"\r\n                    />\r\n                    {\r\n                        <div className=\"dashboard-course__add\">\r\n                            <FontAwesomeIcon icon={faPlus} />\r\n                            Add Video\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"dashboard-course__videos\">\r\n                {loading || error ? (\r\n                    <div className=\"dashboard-course__videos__status\">\r\n                        {loading ? <Loading /> : <ErrorCard message={error} />}\r\n                    </div>\r\n                ) : (\r\n                    videos.map((video) => {\r\n                        return (\r\n                            <VideoDisplay\r\n                                video={video}\r\n                                videos={videos}\r\n                                setRefresh={setRefresh}\r\n                            />\r\n                        );\r\n                    })\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Videos;\r\n"],"names":["_ref","setIsConfirm","setIsDelete","wrapperRef","useRef","theme","useTheme","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsx","className","concat","children","_jsxs","ref","onClick","title","subtitle","style","marginBottom","color","fontSize","fontWeight","message","position","fill","onTop","FontAwesomeIcon","icon","faXmark","video","setIsEditing","setRefresh","display","videos","description","durationInMinutes","orderNb","isConfirm","useState","isDelete","isEditing","EditVideo","ConfirmCard","faYoutube","faEdit","faTrash","loading","setLoading","error","setError","setVideos","refresh","prevLocation","setPrevLocation","courseId","useParams","user","useAuth","accessToken","useAccessToken","location","useLocation","arr","pathname","split","length","pop","join","async","response","fetch","role","toLowerCase","id","method","headers","data","json","status","Error","err","fetchVideos","Link","to","faArrowLeft","Header","faPlus","Loading","ErrorCard","map","VideoDisplay"],"sourceRoot":""}