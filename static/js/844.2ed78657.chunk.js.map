{"version":3,"file":"static/js/844.2ed78657.chunk.js","mappings":"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","sources":["components/dashboard/sidebar/Sidebar.tsx","components/textImage/TextImage.tsx"],"sourcesContent":["import \"./Sidebar.scss\";\r\nimport { memo, useState } from \"react\";\r\nimport { Sidebar as ProSideBar, Menu, MenuItem } from \"react-pro-sidebar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faHome,\r\n    faPeopleArrows,\r\n    faFileInvoice,\r\n    faUserPlus,\r\n    faBars,\r\n    faGraduationCap,\r\n    faVideo,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTheme } from \"../../../contexts/ThemeContext\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\nimport TextImage from \"../../textImage/TextImage\";\r\nimport { LocalUser } from \"../../../types/types\";\r\n\r\ninterface UserInfoProps {\r\n    user: LocalUser | null;\r\n}\r\n\r\nconst UserInfo = memo(({ user }: UserInfoProps) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"35px\",\r\n                height: \"35px\",\r\n                cursor: \"pointer\",\r\n                borderRadius: \"50%\",\r\n                overflow: \"hidden\",\r\n                color: \"white\",\r\n            }}\r\n        >\r\n            {user && user.photoURL ? (\r\n                <img\r\n                    src={user.photoURL}\r\n                    style={{\r\n                        display: \"block\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"contain\",\r\n                    }}\r\n                    alt=\"profile-user\"\r\n                />\r\n            ) : (\r\n                <TextImage\r\n                    text={\r\n                        user && user.displayName\r\n                            ? user.displayName\r\n                            : \"Uknown User\"\r\n                    }\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\ninterface ItemProps {\r\n    title: string;\r\n    to: string;\r\n    icon: JSX.Element;\r\n    selected: string;\r\n    setSelected: (title: string) => void;\r\n}\r\n\r\nconst Item = ({ title, to, icon, selected, setSelected }: ItemProps) => {\r\n    return (\r\n        <MenuItem\r\n            component={<Link to={`/${to}`} />}\r\n            active={selected === to}\r\n            style={{\r\n                color: \"var(--primary-text-color)\",\r\n                borderRadius: \"10px\",\r\n                fontSize: \"14px\",\r\n                fontWeight: \"500\",\r\n            }}\r\n            onClick={() => setSelected(to)}\r\n            icon={icon}\r\n        >\r\n            <p>{title}</p>\r\n        </MenuItem>\r\n    );\r\n};\r\n\r\nconst Sidebar = () => {\r\n    const { theme } = useTheme();\r\n    const [isOpen, SetIsOpen] = useState(true);\r\n\r\n    // Get the last part of the current URL\r\n    let URLArray = window.location.pathname.split(\"/\");\r\n    if (URLArray[URLArray.length - 1] === \"\") URLArray.pop();\r\n\r\n    const currentURL = URLArray.pop();\r\n\r\n    const [selected, setSelected] = useState<string>(\r\n        currentURL === \"dashboard\" ? currentURL : `dashboard/${currentURL}`\r\n    );\r\n\r\n    const { user } = useAuth();\r\n\r\n    const items =\r\n        (user?.role.toLowerCase() ?? \"user\") === \"admin\"\r\n            ? [\r\n                  {\r\n                      subtitle: \"\",\r\n                      items: [\r\n                          {\r\n                              title: \"Dashboard\",\r\n                              to: \"dashboard\",\r\n                              icon: <FontAwesomeIcon icon={faHome} />,\r\n                              selected,\r\n                              setSelected,\r\n                          },\r\n                      ],\r\n                  },\r\n                  {\r\n                      subtitle: \"Pages\",\r\n                      items: [\r\n                          {\r\n                              title: \"Manage Users\",\r\n                              to: \"dashboard/users\",\r\n                              icon: <FontAwesomeIcon icon={faPeopleArrows} />,\r\n                              selected,\r\n                              setSelected,\r\n                          },\r\n                          {\r\n                              title: \"Invoices\",\r\n                              to: \"dashboard/invoices\",\r\n                              icon: <FontAwesomeIcon icon={faFileInvoice} />,\r\n                              selected,\r\n                              setSelected,\r\n                          },\r\n                          {\r\n                              title: \"Courses\",\r\n                              to: \"dashboard/courses\",\r\n                              icon: <FontAwesomeIcon icon={faVideo} />,\r\n                              selected,\r\n                              setSelected,\r\n                          },\r\n                      ],\r\n                  },\r\n                  {\r\n                      subtitle: \"Data\",\r\n                      items: [\r\n                          {\r\n                              title: \"Add User\",\r\n                              to: \"dashboard/addUser\",\r\n                              icon: <FontAwesomeIcon icon={faUserPlus} />,\r\n                              selected,\r\n                              setSelected,\r\n                          },\r\n                          {\r\n                              title: \"Add Instructor\",\r\n                              to: \"dashboard/addInstructor\",\r\n                              icon: <FontAwesomeIcon icon={faGraduationCap} />,\r\n                              selected,\r\n                              setSelected,\r\n                          },\r\n                      ],\r\n                  },\r\n              ]\r\n            : user?.role.toLowerCase() === \"instructor\"\r\n            ? [\r\n                  {\r\n                      subtitle: \"\",\r\n                      items: [\r\n                          {\r\n                              title: \"Dashboard\",\r\n                              to: \"dashboard\",\r\n                              icon: <FontAwesomeIcon icon={faHome} />,\r\n                              selected,\r\n                              setSelected,\r\n                          },\r\n                      ],\r\n                  },\r\n                  {\r\n                      subtitle: \"Pages\",\r\n                      items: [\r\n                          {\r\n                              title: \"Courses\",\r\n                              to: \"dashboard/courses\",\r\n                              icon: <FontAwesomeIcon icon={faVideo} />,\r\n                              selected,\r\n                              setSelected,\r\n                          },\r\n                      ],\r\n                  },\r\n              ]\r\n            : [];\r\n\r\n    return (\r\n        <div className={`sidebar`}>\r\n            <ProSideBar\r\n                collapsed={!isOpen}\r\n                style={{\r\n                    backgroundColor: `var(--primary-background-color) !important`,\r\n                }}\r\n            >\r\n                <Menu>\r\n                    <MenuItem\r\n                        className=\"sidebar__menu-header\"\r\n                        icon={\r\n                            !isOpen ? (\r\n                                <button\r\n                                    className=\"sidebar__menu-button\"\r\n                                    onClick={() => SetIsOpen(!isOpen)}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faBars} />\r\n                                </button>\r\n                            ) : undefined\r\n                        }\r\n                        style={{\r\n                            margin: \"10px 0 20px 0\",\r\n                        }}\r\n                    >\r\n                        {isOpen && (\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-between\",\r\n                                    alignItems: \"center\",\r\n                                    marginLeft: \"15px\",\r\n                                }}\r\n                            >\r\n                                <h3\r\n                                    style={{\r\n                                        fontSize: \"24px\",\r\n                                        fontWeight: \"400\",\r\n                                    }}\r\n                                >\r\n                                    BINEAST\r\n                                </h3>\r\n                                <button\r\n                                    className=\"sidebar__menu-button\"\r\n                                    onClick={() => SetIsOpen(!isOpen)}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faBars} />\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </MenuItem>\r\n                    <div\r\n                        style={{\r\n                            display: `${isOpen ? \"flex\" : \"none\"}`,\r\n                            textAlign: \"center\",\r\n                            padding: \"10% 0 10% 10%\",\r\n                            borderTop: `1px solid var(--secondary-text-color)`,\r\n                            borderBottom: `1px solid var(--secondary-text-color)`,\r\n                            alignItems: \"center\",\r\n                        }}\r\n                    >\r\n                        <UserInfo user={user} />\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                flex: \"1\",\r\n                            }}\r\n                        >\r\n                            <h5\r\n                                style={{\r\n                                    color: \"var(--primary-text-color)\",\r\n                                    fontWeight: \"700\",\r\n                                    fontSize: \"16px\",\r\n                                    marginTop: \"4px\",\r\n                                }}\r\n                            >\r\n                                {user && user.displayName\r\n                                    ? user.displayName\r\n                                    : \"Unknown User\"}\r\n                            </h5>\r\n                            <h6\r\n                                style={{\r\n                                    color: \"var(--light-green-text-color)\",\r\n                                    fontWeight: \"500\",\r\n                                    fontSize: \"14px\",\r\n                                    textTransform: \"capitalize\",\r\n                                }}\r\n                            >\r\n                                {user ? user.role : \"user\"}\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div\r\n                        className={`sidebar-items ${theme}`}\r\n                        style={{\r\n                            padding: isOpen ? \"10%\" : undefined,\r\n                        }}\r\n                    >\r\n                        {items.map((item, index) => (\r\n                            <span key={index}>\r\n                                {item.subtitle && (\r\n                                    <h6 className=\"sidebar-items__subtitle\">\r\n                                        {item.subtitle}\r\n                                    </h6>\r\n                                )}\r\n                                {item.items.map((item, index) => (\r\n                                    <Item\r\n                                        key={index}\r\n                                        title={item.title}\r\n                                        to={item.to}\r\n                                        icon={item.icon}\r\n                                        selected={selected}\r\n                                        setSelected={setSelected}\r\n                                    />\r\n                                ))}\r\n                            </span>\r\n                        ))}\r\n                    </div>\r\n                </Menu>\r\n            </ProSideBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","import \"./TextImage.scss\";\r\n\r\n// Function to generate random color\r\nfunction randomColor(): string {\r\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n}\r\n\r\ninterface TextImageProps {\r\n    text: string;\r\n}\r\n\r\nfunction TextImage({ text }: TextImageProps) {\r\n    const textArray = text.split(\" \");\r\n    const textToDisplay =\r\n        textArray.length < 2\r\n            ? `${textArray[0][0]}`\r\n            : `${textArray[0][0] + textArray[1][0]}`;\r\n\r\n    const color = randomColor();\r\n\r\n    return (\r\n        <div\r\n            className=\"generated-image__wrapper\"\r\n            style={{\r\n                backgroundColor: color ? color : \"#00ff55\",\r\n            }}\r\n        >\r\n            {textToDisplay}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextImage;\r\n"],"names":["UserInfo","memo","_ref","user","_jsx","style","width","height","cursor","borderRadius","overflow","color","children","photoURL","src","display","objectFit","alt","TextImage","text","displayName","Item","_ref2","title","to","icon","selected","setSelected","MenuItem","component","Link","concat","active","fontSize","fontWeight","onClick","Sidebar","_user$role$toLowerCas","theme","useTheme","isOpen","SetIsOpen","useState","URLArray","window","location","pathname","split","length","pop","currentURL","useAuth","items","role","toLowerCase","subtitle","FontAwesomeIcon","faHome","faPeopleArrows","faFileInvoice","faVideo","faUserPlus","faGraduationCap","className","ProSideBar","collapsed","backgroundColor","_jsxs","Menu","undefined","faBars","margin","justifyContent","alignItems","marginLeft","textAlign","padding","borderTop","borderBottom","flex","marginTop","textTransform","map","item","index","textArray","textToDisplay","Math","floor","random","toString"],"sourceRoot":""}