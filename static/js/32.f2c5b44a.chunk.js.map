{"version":3,"file":"static/js/32.f2c5b44a.chunk.js","mappings":"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","sources":["components/dashboard/header/Header.tsx","components/dashboard/statBox/StatBox.tsx","pages/dashboard/overview/Overview.tsx","components/textImage/TextImage.tsx","components/dashboard/sidebar/Sidebar.tsx","components/dashboard/topbar/Topbar.tsx","pages/dashboard/users/Users.tsx","pages/dashboard/Dashboard.tsx"],"sourcesContent":["interface HeaderProps {\r\n    title: string;\r\n    subtitle: string;\r\n}\r\n\r\nconst Header = ({ title, subtitle }: HeaderProps) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                marginBottom: \"15px\",\r\n            }}\r\n        >\r\n            <h2\r\n                style={{\r\n                    color: \"var(--primary-text-color)\",\r\n                    fontSize: \"32px\",\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: \"5px\",\r\n                }}\r\n            >\r\n                {title}\r\n            </h2>\r\n            <h5\r\n                style={{\r\n                    color: \"var(--light-green-text-color)\",\r\n                    fontWeight: \"400\",\r\n                    fontSize: \"16px\",\r\n                }}\r\n            >\r\n                {subtitle}\r\n            </h5>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"./StatBox.scss\";\r\n\r\ninterface StatBoxProps {\r\n    to: string;\r\n    value: string;\r\n    subtitle: string;\r\n    icon: JSX.Element;\r\n}\r\n\r\nfunction StatBox({ to, value, subtitle, icon }: StatBoxProps) {\r\n    return (\r\n        <Link\r\n            style={{\r\n                width: \"100%\",\r\n                margin: \"0px 30px\",\r\n                height: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n            }}\r\n            to={`/${to}`}\r\n        >\r\n            <div className=\"stat-box\">\r\n                <div className=\"stat-box__header\">\r\n                    {icon}\r\n                    <h4 style={{ color: \"var(--primary-text-color)\" }}>\r\n                        {value}\r\n                    </h4>\r\n                </div>\r\n                <div className=\"stat-box__details\">\r\n                    <h5>{subtitle}</h5>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default StatBox;\r\n","import \"./Overview.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faUser,\r\n    faUserPlus,\r\n    faStar,\r\n    faChartLine,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Header from \"../../../components/dashboard/header/Header\";\r\nimport StatBox from \"../../../components/dashboard/statBox/StatBox\";\r\n\r\nfunction Overview() {\r\n    return (\r\n        <div className=\"dashboard-overview\">\r\n            <Header title=\"Overview\" subtitle=\"Welcome to my dashboard\" />\r\n\r\n            <div className=\"dashboard-overview__content\">\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 3\",\r\n                    }}\r\n                >\r\n                    <StatBox\r\n                        to=\"users\"\r\n                        value=\"100\"\r\n                        subtitle=\"Active Users\"\r\n                        icon={\r\n                            <FontAwesomeIcon className=\"icon\" icon={faUser} />\r\n                        }\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 3\",\r\n                    }}\r\n                >\r\n                    <StatBox\r\n                        to=\"\"\r\n                        value=\"20$\"\r\n                        subtitle=\"Monthly income\"\r\n                        icon={\r\n                            <FontAwesomeIcon\r\n                                className=\"icon\"\r\n                                icon={faChartLine}\r\n                            />\r\n                        }\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 3\",\r\n                    }}\r\n                >\r\n                    <StatBox\r\n                        to=\"\"\r\n                        value=\"5\"\r\n                        subtitle=\"New Subscription\"\r\n                        icon={\r\n                            <FontAwesomeIcon className=\"icon\" icon={faStar} />\r\n                        }\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 3\",\r\n                    }}\r\n                >\r\n                    <StatBox\r\n                        to=\"\"\r\n                        value=\"23\"\r\n                        subtitle=\"New Users\"\r\n                        icon={\r\n                            <FontAwesomeIcon\r\n                                className=\"icon\"\r\n                                icon={faUserPlus}\r\n                            />\r\n                        }\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 8\",\r\n                        gridRow: \"span 2\",\r\n                    }}\r\n                >\r\n                    <h3>Card 5</h3>\r\n                </div>\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 4\",\r\n                        gridRow: \"span 2\",\r\n                    }}\r\n                >\r\n                    <h3>Card 6</h3>\r\n                </div>\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 3\",\r\n                    }}\r\n                >\r\n                    <h3>Card 7</h3>\r\n                </div>\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 3\",\r\n                    }}\r\n                >\r\n                    <h3>Card 8</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Overview;\r\n","import \"./TextImage.scss\";\r\n\r\n// Function to generate random color\r\nfunction randomColor(): string {\r\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n}\r\n\r\ninterface TextImageProps {\r\n    text: string;\r\n}\r\n\r\nfunction TextImage({ text }: TextImageProps) {\r\n    const textArray = text.split(\" \");\r\n    const textToDisplay =\r\n        textArray.length < 2\r\n            ? `${textArray[0][0]}`\r\n            : `${textArray[0][0] + textArray[1][0]}`;\r\n\r\n    const color = randomColor();\r\n\r\n    return (\r\n        <div\r\n            className=\"generated-image__wrapper\"\r\n            style={{\r\n                backgroundColor: color ? color : \"#00ff55\",\r\n            }}\r\n        >\r\n            {textToDisplay}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextImage;\r\n","import \"./Sidebar.scss\";\r\nimport { memo, useState } from \"react\";\r\nimport { Sidebar as ProSideBar, Menu, MenuItem } from \"react-pro-sidebar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faHome,\r\n    faPeopleArrows,\r\n    faAddressBook,\r\n    faFileInvoice,\r\n    faUserPlus,\r\n    faPlus,\r\n    faQuestionCircle,\r\n    faBars,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTheme } from \"../../../contexts/ThemeContext\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\nimport TextImage from \"../../textImage/TextImage\";\r\nimport { LocalUser } from \"../../../types/types\";\r\n\r\ninterface UserInfoProps {\r\n    user: LocalUser | null;\r\n}\r\n\r\nconst UserInfo = memo(({ user }: UserInfoProps) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"35px\",\r\n                height: \"35px\",\r\n                cursor: \"pointer\",\r\n                borderRadius: \"50%\",\r\n                overflow: \"hidden\",\r\n                color: \"white\",\r\n            }}\r\n        >\r\n            {user && user.photoURL ? (\r\n                <img\r\n                    src={user.photoURL}\r\n                    style={{\r\n                        display: \"block\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"contain\",\r\n                    }}\r\n                    alt=\"profile-user\"\r\n                />\r\n            ) : (\r\n                <TextImage\r\n                    text={\r\n                        user && user.displayName\r\n                            ? user.displayName\r\n                            : \"Uknown User\"\r\n                    }\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\ninterface ItemProps {\r\n    title: string;\r\n    to: string;\r\n    icon: JSX.Element;\r\n    selected: string;\r\n    setSelected: (title: string) => void;\r\n}\r\n\r\nconst Item = ({ title, to, icon, selected, setSelected }: ItemProps) => {\r\n    return (\r\n        <MenuItem\r\n            component={<Link to={`/${to}`} />}\r\n            active={selected === to}\r\n            style={{\r\n                color: \"var(--primary-text-color)\",\r\n                borderRadius: \"10px\",\r\n                fontSize: \"14px\",\r\n                fontWeight: \"500\",\r\n            }}\r\n            onClick={() => setSelected(to)}\r\n            icon={icon}\r\n        >\r\n            <p>{title}</p>\r\n        </MenuItem>\r\n    );\r\n};\r\n\r\nconst Sidebar = () => {\r\n    const { theme } = useTheme();\r\n    const [isOpen, SetIsOpen] = useState(true);\r\n\r\n    // Get the last part of the current URL\r\n    const currentUrl = window.location.pathname.split(\"/\").pop();\r\n\r\n    const [selected, setSelected] = useState<string>(\r\n        currentUrl === \"dashboard\" ? \"\" : currentUrl ?? \"\"\r\n    );\r\n\r\n    const { user } = useAuth();\r\n\r\n    const items = [\r\n        {\r\n            subtitle: \"\",\r\n            items: [\r\n                {\r\n                    title: \"Dashboard\",\r\n                    to: \"\",\r\n                    icon: <FontAwesomeIcon icon={faHome} />,\r\n                    selected,\r\n                    setSelected,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            subtitle: \"Data\",\r\n            items: [\r\n                {\r\n                    title: \"Manage Users\",\r\n                    to: \"users\",\r\n                    icon: <FontAwesomeIcon icon={faPeopleArrows} />,\r\n                    selected,\r\n                    setSelected,\r\n                },\r\n                {\r\n                    title: \"Contacts\",\r\n                    to: \"contacts\",\r\n                    icon: <FontAwesomeIcon icon={faAddressBook} />,\r\n                    selected,\r\n                    setSelected,\r\n                },\r\n                {\r\n                    title: \"Invoices\",\r\n                    to: \"invoices\",\r\n                    icon: <FontAwesomeIcon icon={faFileInvoice} />,\r\n                    selected,\r\n                    setSelected,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            subtitle: \"Pages\",\r\n            items: [\r\n                {\r\n                    title: \"Add User\",\r\n                    to: \"addUser\",\r\n                    icon: <FontAwesomeIcon icon={faUserPlus} />,\r\n                    selected,\r\n                    setSelected,\r\n                },\r\n                {\r\n                    title: \"Add Products\",\r\n                    to: \"addProducts\",\r\n                    icon: <FontAwesomeIcon icon={faPlus} />,\r\n                    selected,\r\n                    setSelected,\r\n                },\r\n                {\r\n                    title: \"FAQ Page\",\r\n                    to: \"faq\",\r\n                    icon: <FontAwesomeIcon icon={faQuestionCircle} />,\r\n                    selected,\r\n                    setSelected,\r\n                },\r\n            ],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className={`sidebar`}>\r\n            <ProSideBar\r\n                collapsed={!isOpen}\r\n                style={{\r\n                    backgroundColor: `var(--primary-background-color) !important`,\r\n                }}\r\n            >\r\n                <Menu>\r\n                    <MenuItem\r\n                        className=\"sidebar__menu-header\"\r\n                        icon={\r\n                            !isOpen ? (\r\n                                <button\r\n                                    className=\"sidebar__menu-button\"\r\n                                    onClick={() => SetIsOpen(!isOpen)}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faBars} />\r\n                                </button>\r\n                            ) : undefined\r\n                        }\r\n                        style={{\r\n                            margin: \"10px 0 20px 0\",\r\n                        }}\r\n                    >\r\n                        {isOpen && (\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-between\",\r\n                                    alignItems: \"center\",\r\n                                    marginLeft: \"15px\",\r\n                                }}\r\n                            >\r\n                                <h3\r\n                                    style={{\r\n                                        fontSize: \"24px\",\r\n                                        fontWeight: \"400\",\r\n                                    }}\r\n                                >\r\n                                    BINEAST\r\n                                </h3>\r\n                                <button\r\n                                    className=\"sidebar__menu-button\"\r\n                                    onClick={() => SetIsOpen(!isOpen)}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faBars} />\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </MenuItem>\r\n                    <div\r\n                        style={{\r\n                            display: `${isOpen ? \"flex\" : \"none\"}`,\r\n                            textAlign: \"center\",\r\n                            padding: \"10% 0 10% 10%\",\r\n                            borderTop: `1px solid var(--secondary-text-color)`,\r\n                            borderBottom: `1px solid var(--secondary-text-color)`,\r\n                            alignItems: \"center\",\r\n                        }}\r\n                    >\r\n                        <UserInfo user={user} />\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                flex: \"1\",\r\n                            }}\r\n                        >\r\n                            <h5\r\n                                style={{\r\n                                    color: \"var(--primary-text-color)\",\r\n                                    fontWeight: \"700\",\r\n                                    fontSize: \"16px\",\r\n                                    marginTop: \"4px\",\r\n                                }}\r\n                            >\r\n                                {user ? user.displayName : \"Unknown User\"}\r\n                            </h5>\r\n                            <h6\r\n                                style={{\r\n                                    color: \"var(--light-green-text-color)\",\r\n                                    fontWeight: \"500\",\r\n                                    fontSize: \"14px\",\r\n                                    textTransform: \"capitalize\",\r\n                                }}\r\n                            >\r\n                                {user ? user.role : \"user\"}\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div\r\n                        className={`sidebar-items ${theme}`}\r\n                        style={{\r\n                            padding: isOpen ? \"10%\" : undefined,\r\n                        }}\r\n                    >\r\n                        {items.map((item, index) => (\r\n                            <span key={index}>\r\n                                {item.subtitle && (\r\n                                    <h6 className=\"sidebar-items__subtitle\">\r\n                                        {item.subtitle}\r\n                                    </h6>\r\n                                )}\r\n                                {item.items.map((item, index) => (\r\n                                    <Item\r\n                                        key={index}\r\n                                        title={item.title}\r\n                                        to={item.to}\r\n                                        icon={item.icon}\r\n                                        selected={selected}\r\n                                        setSelected={setSelected}\r\n                                    />\r\n                                ))}\r\n                            </span>\r\n                        ))}\r\n                    </div>\r\n                </Menu>\r\n            </ProSideBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","import \"./Topbar.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faBell,\r\n    faUser,\r\n    faSun,\r\n    faMoon,\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faGear, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTheme } from \"../../../contexts/ThemeContext\";\r\n\r\nconst Topbar = () => {\r\n    const { theme, toggleTheme } = useTheme();\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                padding: \"15px\",\r\n            }}\r\n            className=\"topbar\"\r\n        >\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    borderRadius: \"6px\",\r\n                    backgroundColor: \"var(--secondary-background-color)\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        marginLeft: \"16px\",\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <input\r\n                        className=\"topbar__search-input\"\r\n                        type=\"text\"\r\n                        placeholder=\"Search\"\r\n                    />\r\n                </div>\r\n                <button style={{ padding: 1 }}>\r\n                    <FontAwesomeIcon icon={faSearch} />\r\n                </button>\r\n            </div>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                <button onClick={() => toggleTheme()}>\r\n                    {theme === \"light\" ? (\r\n                        <FontAwesomeIcon icon={faMoon} />\r\n                    ) : (\r\n                        <FontAwesomeIcon icon={faSun} />\r\n                    )}\r\n                </button>\r\n                <button>\r\n                    <FontAwesomeIcon icon={faBell} />\r\n                </button>\r\n                <button>\r\n                    <FontAwesomeIcon icon={faGear} />\r\n                </button>\r\n                <button>\r\n                    <FontAwesomeIcon icon={faUser} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Topbar;\r\n","import \"./Users.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Header from \"../../../components/dashboard/header/Header\";\r\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faCircleCheck,\r\n    faGraduationCap,\r\n    faLock,\r\n    faUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { UserFromDB } from \"../../../types/types\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\n\r\ninterface UserRoleProps {\r\n    userId: string;\r\n    role: string;\r\n}\r\n\r\nconst UserRole = ({ userId, role }: UserRoleProps) => {\r\n    const [prevChoice, setPrevChoice] = useState(role);\r\n    const [choice, setChoice] = useState(role);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const accessToken = useAccessToken();\r\n\r\n    const roleIcons: { [key: string]: JSX.Element } = {\r\n        ADMIN: <FontAwesomeIcon style={{ fontSize: \"11px\" }} icon={faLock} />,\r\n        INSTRUCTOR: (\r\n            <FontAwesomeIcon\r\n                style={{ fontSize: \"11px\" }}\r\n                icon={faGraduationCap}\r\n            />\r\n        ),\r\n        USER: <FontAwesomeIcon style={{ fontSize: \"11px\" }} icon={faUser} />,\r\n    };\r\n\r\n    const handleChangeRole = (role: string) => {\r\n        setChoice(role);\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const handleUpdate = () => {\r\n        const updateUserRole = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + \"/api/users/\" + userId,\r\n                    {\r\n                        method: \"PATCH\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            role: choice,\r\n                        }),\r\n                    }\r\n                );\r\n\r\n                if (response.ok) {\r\n                    setPrevChoice(choice);\r\n                    setIsEditing(false);\r\n                } else {\r\n                    setChoice(prevChoice);\r\n                }\r\n            } catch (error) {}\r\n        };\r\n\r\n        updateUserRole();\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setChoice(prevChoice);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    if (isEditing) {\r\n        return (\r\n            <div className=\"users-table__confirm__role\">\r\n                <span className=\"is-easy hover\" onClick={handleUpdate}>\r\n                    Update\r\n                </span>\r\n                <span className=\"is-hard hover\" onClick={handleCancel}>\r\n                    Cancel\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"60%\",\r\n                margin: \"0 auto\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            }}\r\n        >\r\n            <span className=\"icon\">{roleIcons[role]}</span>\r\n            <select\r\n                className=\"users-table__role\"\r\n                value={choice}\r\n                onChange={(e) => handleChangeRole(e.target.value)}\r\n            >\r\n                {Object.keys(roleIcons).map((role) => (\r\n                    <option key={role} value={role}>\r\n                        {role}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Users = () => {\r\n    const [users, setUsers] = useState<UserFromDB[]>([]);\r\n\r\n    const accessToken = useAccessToken();\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + \"/api/users\",\r\n                    {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                const data = await response.json();\r\n                setUsers(data);\r\n            } catch (error) {}\r\n        };\r\n\r\n        fetchUsers();\r\n    }, [accessToken]);\r\n\r\n    const columns: GridColDef<UserFromDB>[] = [\r\n        { field: \"id\", headerName: \"ID\" },\r\n        { field: \"email\", headerName: \"Email\", flex: 1 },\r\n        {\r\n            field: \"role\",\r\n            headerName: \"Role\",\r\n            flex: 1,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n            renderCell: ({ row: { role, id } }) => (\r\n                <UserRole userId={id} role={role} />\r\n            ),\r\n        },\r\n        {\r\n            field: \"isPremium\",\r\n            headerName: \"Premium\",\r\n            flex: 1,\r\n            renderCell: ({ row: { isPremium } }) => {\r\n                return (\r\n                    <div>\r\n                        <FontAwesomeIcon\r\n                            style={{\r\n                                color: isPremium ? \"#3fb24b\" : \"grey\",\r\n                            }}\r\n                            icon={faCircleCheck}\r\n                        />\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n    return (\r\n        <div className=\"dashboard-users\">\r\n            <Header\r\n                title=\"Users\"\r\n                subtitle=\"In this page you can manage users\"\r\n            />\r\n            <div className=\"users-table\">\r\n                <DataGrid\r\n                    sx={{\r\n                        \"&.MuiDataGrid-root .MuiDataGrid-cell:focus-within\": {\r\n                            outline: \"none !important\",\r\n                        },\r\n\r\n                        \"& .MuiDataGrid-filler\": {\r\n                            height: \"1px !important\",\r\n                        },\r\n\r\n                        \"& .MuiDataGrid-overlayWrapper\": {\r\n                            height: \"55px !important\",\r\n                        },\r\n                    }}\r\n                    rows={users}\r\n                    columns={columns}\r\n                    slots={{\r\n                        noRowsOverlay: () => (\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\",\r\n                                    height: \"100%\",\r\n                                    color: \"var(--primary-text-color)\",\r\n                                }}\r\n                            >\r\n                                No users found\r\n                            </div>\r\n                        ),\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n","import \"./Dashboard.scss\";\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\nimport Overview from \"./overview/Overview\";\r\nimport Sidebar from \"../../components/dashboard/sidebar/Sidebar\";\r\nimport Topbar from \"../../components/dashboard/topbar/Topbar\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport Users from \"./users/Users\";\r\n\r\nfunction Dashboard() {\r\n    const { user } = useAuth();\r\n\r\n    // if (!user) {\r\n    //     return <Navigate to={\"/login\"} />;\r\n    // }\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Sidebar />\r\n            <main className=\"content\">\r\n                <Topbar />\r\n                <div className=\"dashboard-section\">\r\n                    <Routes>\r\n                        <Route path=\"/\" element={<Overview />} />\r\n                        <Route path=\"/users\" element={<Users />} />\r\n                    </Routes>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"names":["_ref","title","subtitle","_jsxs","style","marginBottom","children","_jsx","color","fontSize","fontWeight","to","value","icon","Link","width","margin","height","display","justifyContent","flexDirection","concat","className","Header","gridColumn","StatBox","FontAwesomeIcon","faUser","faChartLine","faStar","faUserPlus","gridRow","text","textArray","split","textToDisplay","length","Math","floor","random","toString","backgroundColor","UserInfo","memo","user","cursor","borderRadius","overflow","photoURL","src","objectFit","alt","TextImage","displayName","Item","_ref2","selected","setSelected","MenuItem","component","active","onClick","Sidebar","theme","useTheme","isOpen","SetIsOpen","useState","currentUrl","window","location","pathname","pop","useAuth","items","faHome","faPeopleArrows","faAddressBook","faFileInvoice","faPlus","faQuestionCircle","ProSideBar","collapsed","Menu","undefined","faBars","alignItems","marginLeft","textAlign","padding","borderTop","borderBottom","flex","marginTop","textTransform","role","map","item","index","Topbar","toggleTheme","type","placeholder","faSearch","faMoon","faSun","faBell","faGear","UserRole","userId","prevChoice","setPrevChoice","choice","setChoice","isEditing","setIsEditing","accessToken","useAccessToken","roleIcons","ADMIN","faLock","INSTRUCTOR","faGraduationCap","USER","handleUpdate","async","fetch","process","method","headers","body","JSON","stringify","ok","error","updateUserRole","handleCancel","onChange","e","handleChangeRole","target","Object","keys","Users","users","setUsers","useEffect","response","data","json","fetchUsers","columns","field","headerName","headerAlign","align","renderCell","row","id","_ref3","isPremium","faCircleCheck","DataGrid","sx","outline","rows","slots","noRowsOverlay","Routes","Route","path","element","Overview"],"sourceRoot":""}