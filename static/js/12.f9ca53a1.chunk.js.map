{"version":3,"file":"static/js/12.f9ca53a1.chunk.js","mappings":"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","sources":["components/dashboard/header/Header.tsx","components/error/ErrorCard.tsx","components/dashboard/fileInput/FileInput.tsx","components/dashboard/editCourse/EditCourse.tsx","components/dashboard/courseDisplay/CourseDisplay.tsx","pages/dashboard/courses/Courses.tsx"],"sourcesContent":["interface HeaderProps {\r\n    title: string;\r\n    subtitle: string;\r\n}\r\n\r\nconst Header = ({ title, subtitle }: HeaderProps) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                marginBottom: \"15px\",\r\n            }}\r\n        >\r\n            <h2\r\n                style={{\r\n                    color: \"var(--primary-text-color)\",\r\n                    fontSize: \"32px\",\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: \"5px\",\r\n                }}\r\n            >\r\n                {title}\r\n            </h2>\r\n            <h5\r\n                style={{\r\n                    color: \"var(--light-green-text-color)\",\r\n                    fontWeight: \"400\",\r\n                    fontSize: \"16px\",\r\n                }}\r\n            >\r\n                {subtitle}\r\n            </h5>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import \"./ErrorCard.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface ErrorCardProps {\r\n    message: string;\r\n    fill?: boolean;\r\n    onTop?: boolean;\r\n    position?: \"relative\" | \"absolute\";\r\n}\r\n\r\nfunction ErrorCard({\r\n    message,\r\n    position = \"absolute\",\r\n    fill = false,\r\n    onTop = false,\r\n}: ErrorCardProps) {\r\n    return (\r\n        <div className={`error-card ${fill && \"fill\"} ${onTop && \"on-top\"}`}>\r\n            <div className=\"error-card__wrapper\">\r\n                <div className=\"icon\">\r\n                    <FontAwesomeIcon icon={faXmark} />\r\n                </div>\r\n                {message}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorCard;\r\n","import { faArrowUpFromBracket } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useRef } from \"react\";\r\n\r\ninterface FileInputProps {\r\n    displayText: string;\r\n    setFile: (file: File) => void;\r\n}\r\n\r\nfunction FileInput({ displayText, setFile }: FileInputProps) {\r\n    const messageRef = useRef<HTMLDivElement>(null);\r\n    return (\r\n        <div className=\"input-wrapper contain-file\">\r\n            <label htmlFor=\"file-input\">\r\n                <FontAwesomeIcon icon={faArrowUpFromBracket} />\r\n                <span>{displayText}</span>\r\n            </label>\r\n            <input\r\n                className=\"file-input\"\r\n                id=\"file-input\"\r\n                type=\"file\"\r\n                accept=\".png, .jpeg, .jpg\"\r\n                onChange={(e) => {\r\n                    messageRef.current!.innerText = e.target.files![0].name;\r\n                    setFile(e.target.files![0]);\r\n                }}\r\n            />\r\n            <div ref={messageRef} className=\"message\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileInput;\r\n","import \"./EditCourse.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTheme } from \"../../../contexts/ThemeContext\";\r\nimport { Course } from \"../../../types/types\";\r\nimport { Form, Field, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\nimport FileInput from \"../fileInput/FileInput\";\r\nimport { useState } from \"react\";\r\n\r\ninterface FormCourse extends Course {\r\n    price: \"free\" | \"premium\";\r\n    // TODO: remove those properties\r\n    // visibility: \"public\" | \"private\";\r\n}\r\ninterface EditCourseProps {\r\n    course: Course;\r\n    setIsEditing: (state: boolean) => void;\r\n    setRefresh: (state: any) => void;\r\n}\r\n\r\nfunction EditCourse({ course, setIsEditing, setRefresh }: EditCourseProps) {\r\n    const [thumbnail, setThumbnail] = useState<File | null>(null);\r\n    const { theme } = useTheme();\r\n    const accessToken = useAccessToken();\r\n\r\n    const formCourse: FormCourse = {\r\n        ...course,\r\n        level: course.level.toLowerCase() as\r\n            | \"beginner\"\r\n            | \"intermediate\"\r\n            | \"advanced\",\r\n        price: course.isPremium ? \"premium\" : \"free\",\r\n        // visibility: \"private\",\r\n    };\r\n\r\n    const handleFormSubmit = (values: FormCourse) => {\r\n        const formData = new FormData();\r\n\r\n        formData.append(\"title\", values.title);\r\n        formData.append(\"description\", values.description);\r\n        formData.append(\"level\", values.level);\r\n        // formData.append(\"visibility\", values.visibility);\r\n        formData.append(\"price\", values.price);\r\n        formData.append(\"tags\", values.tags ?? \"\");\r\n        formData.append(\"thumbnail\", thumbnail ?? \"\");\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            fetch(process.env.REACT_APP_API_URL + \"/api/courses/\" + course.id, {\r\n                method: \"PATCH\",\r\n                headers: { \"x-access-token\": accessToken },\r\n                body: formData,\r\n            })\r\n                .then((response) => {\r\n                    if (response.ok) {\r\n                        setIsEditing(false);\r\n                        resolve();\r\n                        setTimeout(() => {\r\n                            setRefresh((prev: boolean) => !prev);\r\n                        }, 1000);\r\n                    } else {\r\n                        reject(new Error(response.statusText));\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    if (error instanceof Error) {\r\n                        reject(error.message);\r\n                    }\r\n                    reject(\"Something wrong happened while editing course\");\r\n                });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className={`edit-course ${theme}`}>\r\n            <div className=\"edit-course__wrapper\">\r\n                <span\r\n                    data-tooltip=\"Cancel\"\r\n                    className=\"tooltip bottom cancel\"\r\n                    onClick={() => setIsEditing(false)}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        style={{ display: \"block\" }}\r\n                        icon={faXmark}\r\n                    />\r\n                </span>\r\n                <Formik\r\n                    initialValues={formCourse}\r\n                    onSubmit={handleFormSubmit}\r\n                    validationSchema={checkoutSchema}\r\n                >\r\n                    {({\r\n                        isSubmitting,\r\n                        values,\r\n                        errors,\r\n                        isValid,\r\n                        handleBlur,\r\n                        handleChange,\r\n                        handleSubmit,\r\n                    }) => (\r\n                        <Form\r\n                            className=\"dashboard-form\"\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n                            <div\r\n                                data-error={errors.title ? errors.title : \"\"}\r\n                                className={`input-wrapper ${\r\n                                    errors.title ? \"error\" : \"\"\r\n                                }`}\r\n                            >\r\n                                <label htmlFor=\"title\">Course Title:</label>\r\n                                <Field\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={errors.title ? \"error\" : \"\"}\r\n                                    name=\"title\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Course Title\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                className={`input-wrapper ${\r\n                                    errors.description ? \"error\" : \"\"\r\n                                }`}\r\n                                data-error={\r\n                                    errors.description ? errors.description : \"\"\r\n                                }\r\n                            >\r\n                                <label htmlFor=\"description\">\r\n                                    Course Description:\r\n                                </label>\r\n                                <Field\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={\r\n                                        errors.description ? \"error\" : \"\"\r\n                                    }\r\n                                    name=\"description\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Course Description\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-wrapper\">\r\n                                <label htmlFor=\"tags\">\r\n                                    Tags:{\" \"}\r\n                                    <span className=\"addition\">\r\n                                        (separated by ' , ')\r\n                                    </span>\r\n                                </label>\r\n                                <Field\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    name=\"tags\"\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"three-inputs\">\r\n                                <div className=\"input-wrapper\">\r\n                                    <label htmlFor=\"level\">Level:</label>\r\n                                    <Field name=\"level\" as=\"select\">\r\n                                        <option value=\"beginner\">\r\n                                            Beginner\r\n                                        </option>\r\n                                        <option value=\"advanced\">\r\n                                            Advanced\r\n                                        </option>\r\n                                        <option value=\"intermediate\">\r\n                                            Intermediate\r\n                                        </option>\r\n                                    </Field>\r\n                                </div>\r\n                                <div className=\"input-wrapper\">\r\n                                    <label htmlFor=\"price\">Price</label>\r\n                                    <Field name=\"price\" as=\"select\">\r\n                                        <option value=\"free\">Free</option>\r\n                                        <option value=\"premium\">Premium</option>\r\n                                    </Field>\r\n                                </div>\r\n                                <div className=\"input-wrapper\">\r\n                                    <label htmlFor=\"visibility\">\r\n                                        Visibility:\r\n                                    </label>\r\n                                    <Field name=\"visibility\" as=\"select\">\r\n                                        <option value=\"public\">Public</option>\r\n                                        <option value=\"private\">Private</option>\r\n                                    </Field>\r\n                                </div>\r\n                                <div className=\"input-wrapper\">\r\n                                    <label htmlFor=\"durationInMinutes\">\r\n                                        Duration In Minutes:\r\n                                    </label>\r\n                                    <Field\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        name=\"durationInMinutes\"\r\n                                        type=\"text\"\r\n                                        disabled\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <FileInput\r\n                                displayText=\"choose new thumbnail\"\r\n                                setFile={setThumbnail}\r\n                            />\r\n                            <div className=\"dashboard-form__save\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    disabled={\r\n                                        !isValid ||\r\n                                        isSubmitting ||\r\n                                        // ! Check again\r\n                                        JSON.stringify({\r\n                                            ...course,\r\n                                            price: course.isPremium\r\n                                                ? \"premium\"\r\n                                                : \"free\",\r\n                                        }) === JSON.stringify(values)\r\n                                    }\r\n                                >\r\n                                    Update\r\n                                </button>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst checkoutSchema = yup.object().shape({\r\n    title: yup\r\n        .string()\r\n        .max(65, \"Title length must not exceed 65 characters\")\r\n        .required(\"Course Title cannot be empty\"),\r\n    description: yup.string().required(\"Required\"),\r\n});\r\n\r\nexport default EditCourse;\r\n","import \"./CourseDisplay.scss\";\r\nimport { Course } from \"../../../types/types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { lazy, useEffect, useState } from \"react\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\nimport EditCourse from \"../editCourse/EditCourse\";\r\n\r\nconst ConfirmCard = lazy(() => import(\"../../confrimCard/ConfirmCard\"));\r\n\r\ninterface CourseDisplayProps {\r\n    course: Course;\r\n    setRefresh: (state: any) => void;\r\n}\r\n\r\nfunction CourseDisplay({ course, setRefresh }: CourseDisplayProps) {\r\n    const [isConfirm, setIsConfirm] = useState(false);\r\n    const [isDelete, setIsDelete] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const {\r\n        id,\r\n        imgUrl,\r\n        title,\r\n        description,\r\n        durationInMinutes,\r\n        level,\r\n        isPremium,\r\n    } = course;\r\n\r\n    const accessToken = useAccessToken();\r\n\r\n    useEffect(() => {\r\n        const deleteCourse = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + `/api/courses/${id}`,\r\n                    {\r\n                        method: \"DELETE\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if (response.ok) {\r\n                    setRefresh((prev: boolean) => !prev);\r\n                    setIsDelete(false);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        if (isDelete) deleteCourse();\r\n    }, [isDelete, accessToken, id, setRefresh]);\r\n\r\n    const handleClick = () => {\r\n        // logic\r\n    };\r\n\r\n    return (\r\n        <div className=\"course-display\" onClick={handleClick}>\r\n            {isConfirm && (\r\n                <ConfirmCard\r\n                    setIsConfirm={setIsConfirm}\r\n                    setIsDelete={setIsDelete}\r\n                    setRefresh={setRefresh}\r\n                />\r\n            )}\r\n            {isEditing && (\r\n                <EditCourse\r\n                    course={course}\r\n                    setIsEditing={setIsEditing}\r\n                    setRefresh={setRefresh}\r\n                />\r\n            )}\r\n            <div className=\"course-display__img\">\r\n                <img src={imgUrl} alt={title} />\r\n            </div>\r\n            <div className=\"course-display__content\">\r\n                <div>\r\n                    <h1>{title}</h1>\r\n                    <p>{description}</p>\r\n                </div>\r\n                <div className=\"course-display__content__details\">\r\n                    <div className=\"course-display__content__details__duration\">\r\n                        Duration: {durationInMinutes} minutes\r\n                    </div>\r\n                    <div className=\"course-display__content__details__level\">\r\n                        Level: {level}\r\n                    </div>\r\n                    <div className=\"course-display__content__details__is-premium\">\r\n                        {isPremium ? \"Premium\" : \"Free\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"course-display__control\">\r\n                <span className=\"edit\" onClick={() => setIsEditing(true)}>\r\n                    <FontAwesomeIcon icon={faEdit} />\r\n                </span>\r\n                <span className=\"delete\" onClick={() => setIsConfirm(true)}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseDisplay;\r\n","import \"./Courses.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Header from \"../../../components/dashboard/header/Header\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\nimport { Course } from \"../../../types/types\";\r\nimport Loading from \"../../../components/loading/Loading\";\r\nimport CourseDisplay from \"../../../components/dashboard/courseDisplay/CourseDisplay\";\r\nimport ErrorCard from \"../../../components/error/ErrorCard\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\n\r\nfunction Courses() {\r\n    const [courses, setCourses] = useState<Course[]>([]);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<string>(\"\");\r\n    const [refresh, setRefresh] = useState<boolean>(false);\r\n\r\n    const { user } = useAuth();\r\n\r\n    const accessToken = useAccessToken();\r\n\r\n    useEffect(() => {\r\n        const getCourses = async () => {\r\n            try {\r\n                setError(\"\");\r\n                setLoading(true);\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + \"/api/courses\",\r\n                    {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                    }\r\n                );\r\n                const data = await response.json();\r\n\r\n                if (response.status !== 200) throw new Error(data.message);\r\n\r\n                setCourses(data);\r\n                setLoading(false);\r\n                if (data.length === 0) setError(\"No courses available\");\r\n            } catch (err) {\r\n                setLoading(false);\r\n                if (err instanceof Error) {\r\n                    setError(err.message);\r\n                } else {\r\n                    setError(\"Error fetching data from server\");\r\n                }\r\n            }\r\n        };\r\n        getCourses();\r\n    }, [refresh, accessToken]);\r\n\r\n    return (\r\n        <div className=\"dashboard-courses\">\r\n            <div className=\"dashboard-courses__header\">\r\n                <Header\r\n                    title=\"Courses\"\r\n                    subtitle=\"In this page you can manage courses\"\r\n                />\r\n                {user?.role.toLowerCase() === \"instructor\" && (\r\n                    <div className=\"dashboard-courses__add\">\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                        Add Course\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"courses\">\r\n                {loading || error ? (\r\n                    <div className=\"dashboard-courses__status\">\r\n                        {loading ? <Loading /> : <ErrorCard message={error} />}\r\n                    </div>\r\n                ) : (\r\n                    courses.map((course) => (\r\n                        <CourseDisplay\r\n                            key={course.id}\r\n                            setRefresh={setRefresh}\r\n                            course={course}\r\n                        />\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Courses;\r\n"],"names":["_ref","title","subtitle","_jsxs","style","marginBottom","children","_jsx","color","fontSize","fontWeight","message","position","fill","onTop","className","concat","FontAwesomeIcon","icon","faXmark","displayText","setFile","messageRef","useRef","htmlFor","faArrowUpFromBracket","id","type","accept","onChange","e","current","innerText","target","files","name","ref","checkoutSchema","yup","shape","max","required","description","course","setIsEditing","setRefresh","thumbnail","setThumbnail","useState","theme","useTheme","accessToken","useAccessToken","formCourse","level","toLowerCase","price","isPremium","onClick","display","Formik","initialValues","onSubmit","values","_values$tags","formData","FormData","append","tags","Promise","resolve","reject","fetch","process","method","headers","body","then","response","ok","setTimeout","prev","Error","statusText","catch","error","validationSchema","_ref2","isSubmitting","errors","isValid","handleBlur","handleChange","handleSubmit","Form","Field","onBlur","placeholder","as","value","disabled","FileInput","JSON","stringify","ConfirmCard","lazy","isConfirm","setIsConfirm","isDelete","setIsDelete","isEditing","imgUrl","durationInMinutes","useEffect","async","console","log","deleteCourse","handleClick","EditCourse","src","alt","faEdit","faTrash","courses","setCourses","loading","setLoading","setError","refresh","user","useAuth","data","json","status","length","err","getCourses","Header","role","faPlus","Loading","ErrorCard","map","CourseDisplay"],"sourceRoot":""}