{"version":3,"file":"static/js/504.83acd974.chunk.js","mappings":"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","sources":["components/dashboard/header/Header.tsx","pages/dashboard/addInstructor/AddInstructor.tsx"],"sourcesContent":["interface HeaderProps {\r\n    title: string;\r\n    subtitle: string;\r\n}\r\n\r\nconst Header = ({ title, subtitle }: HeaderProps) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                marginBottom: \"15px\",\r\n            }}\r\n        >\r\n            <h2\r\n                style={{\r\n                    color: \"var(--primary-text-color)\",\r\n                    fontSize: \"32px\",\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: \"5px\",\r\n                }}\r\n            >\r\n                {title}\r\n            </h2>\r\n            <h5\r\n                style={{\r\n                    color: \"var(--light-green-text-color)\",\r\n                    fontWeight: \"400\",\r\n                    fontSize: \"16px\",\r\n                }}\r\n            >\r\n                {subtitle}\r\n            </h5>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import \"./AddInstructor.scss\";\r\nimport Header from \"../../../components/dashboard/header/Header\";\r\nimport { Field, Formik, Form, FormikHelpers } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useState } from \"react\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\n\r\nfunction AddUser() {\r\n    const [error, setError] = useState<string>(\"\");\r\n    const accessToken = useAccessToken();\r\n\r\n    interface Instructor {\r\n        firstName: string;\r\n        lastName: string;\r\n        email: string;\r\n        phoneNumber: string;\r\n    }\r\n\r\n    const emptyInstructor: Instructor = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phoneNumber: \"\",\r\n    };\r\n\r\n    const handleFormSubmit = (\r\n        values: Instructor,\r\n        { resetForm }: FormikHelpers<Instructor>\r\n    ) => {\r\n        return new Promise<void>((resolve, reject) => {\r\n            setError(\"\");\r\n            const { firstName, lastName, email, phoneNumber } = values;\r\n            const fullName = firstName + \" \" + lastName;\r\n            fetch(process.env.REACT_APP_API_URL + \"/api/instructors/add\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"x-access-token\": accessToken,\r\n                },\r\n                body: JSON.stringify({ fullName, email, phoneNumber }),\r\n            })\r\n                .then(async (response) => {\r\n                    if (response.ok) {\r\n                        resolve();\r\n                        resetForm();\r\n                    } else {\r\n                        const data = await response.json();\r\n\r\n                        throw new Error(data.message);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    if (error instanceof Error) {\r\n                        setError(error.message);\r\n                    } else {\r\n                        setError(\"Something wrong happened, please try again\");\r\n                    }\r\n\r\n                    reject();\r\n                });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-addInstructor\">\r\n            <Header\r\n                title=\"Add Instructor\"\r\n                subtitle=\"Add a new instructor to the system\"\r\n            />\r\n\r\n            <Formik\r\n                initialValues={emptyInstructor}\r\n                onSubmit={handleFormSubmit}\r\n                validationSchema={validationSchema}\r\n                validateOnMount={true}\r\n            >\r\n                {({\r\n                    isSubmitting,\r\n                    errors,\r\n                    isValid,\r\n                    touched,\r\n                    handleBlur,\r\n                    handleChange,\r\n                    handleSubmit,\r\n                }) => (\r\n                    <Form className=\"dashboard-form\" onSubmit={handleSubmit}>\r\n                        {error && (\r\n                            <div className=\"dashboard-form__error\">{error}</div>\r\n                        )}\r\n                        <div className=\"dashboard-form__user-form\">\r\n                            <div className=\"two-inputs\">\r\n                                <div\r\n                                    data-error={\r\n                                        !!touched.firstName &&\r\n                                        !!errors.firstName\r\n                                            ? errors.firstName\r\n                                            : \"\"\r\n                                    }\r\n                                    className={`input-wrapper ${\r\n                                        !!touched.firstName &&\r\n                                        !!errors.firstName\r\n                                            ? \"error\"\r\n                                            : \"\"\r\n                                    }`}\r\n                                >\r\n                                    <label htmlFor=\"firstName\">\r\n                                        First Name:\r\n                                    </label>\r\n                                    <Field\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            !!touched.firstName &&\r\n                                            !!errors.firstName\r\n                                                ? \"error\"\r\n                                                : \"\"\r\n                                        }\r\n                                        name=\"firstName\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"First Name\"\r\n                                    />\r\n                                </div>\r\n                                <div\r\n                                    data-error={\r\n                                        !!touched.lastName && !!errors.lastName\r\n                                            ? errors.lastName\r\n                                            : \"\"\r\n                                    }\r\n                                    className={`input-wrapper ${\r\n                                        !!touched.lastName && !!errors.lastName\r\n                                            ? \"error\"\r\n                                            : \"\"\r\n                                    }`}\r\n                                >\r\n                                    <label htmlFor=\"lastName\">Last Name:</label>\r\n                                    <Field\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            !!touched.lastName &&\r\n                                            !!errors.lastName\r\n                                                ? \"error\"\r\n                                                : \"\"\r\n                                        }\r\n                                        name=\"lastName\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Last Name\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                data-error={\r\n                                    !!touched.email && !!errors.email\r\n                                        ? errors.email\r\n                                        : \"\"\r\n                                }\r\n                                className={`input-wrapper ${\r\n                                    !!touched.email && !!errors.email\r\n                                        ? \"error\"\r\n                                        : \"\"\r\n                                }`}\r\n                            >\r\n                                <label htmlFor=\"email\">Email:</label>\r\n                                <Field\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={\r\n                                        !!touched.email && !!errors.email\r\n                                            ? \"error\"\r\n                                            : \"\"\r\n                                    }\r\n                                    name=\"email\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                data-error={\r\n                                    !!touched.phoneNumber &&\r\n                                    !!errors.phoneNumber\r\n                                        ? errors.phoneNumber\r\n                                        : \"\"\r\n                                }\r\n                                className={`input-wrapper ${\r\n                                    !!touched.phoneNumber &&\r\n                                    !!errors.phoneNumber\r\n                                        ? \"error\"\r\n                                        : \"\"\r\n                                }`}\r\n                            >\r\n                                <label htmlFor=\"phoneNumber\">\r\n                                    Phone Number:\r\n                                </label>\r\n                                <Field\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={\r\n                                        !!touched.phoneNumber &&\r\n                                        !!errors.phoneNumber\r\n                                            ? \"error\"\r\n                                            : \"\"\r\n                                    }\r\n                                    name=\"phoneNumber\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Phone Number\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"dashboard-form__save\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    disabled={\r\n                                        Object.keys(errors).length !== 0 ||\r\n                                        !isValid ||\r\n                                        isSubmitting\r\n                                    }\r\n                                >\r\n                                    Add Instructor\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst phoneRegExp =\r\n    /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\r\n\r\nconst validationSchema = yup.object().shape({\r\n    firstName: yup.string().required(\"First Name is required\"),\r\n    lastName: yup.string().required(\"Last Name is required\"),\r\n    email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n    phoneNumber: yup\r\n        .string()\r\n        .matches(phoneRegExp, \"Phone number is not valid\")\r\n        .required(\"Phone Number is Required\"),\r\n});\r\n\r\nexport default AddUser;\r\n"],"names":["_ref","title","subtitle","_jsxs","style","marginBottom","children","_jsx","color","fontSize","fontWeight","validationSchema","yup","shape","firstName","required","lastName","email","phoneNumber","matches","error","setError","useState","accessToken","useAccessToken","className","Header","Formik","initialValues","onSubmit","handleFormSubmit","values","resetForm","Promise","resolve","reject","fullName","fetch","process","method","headers","body","JSON","stringify","then","async","response","ok","data","json","Error","message","catch","validateOnMount","_ref2","isSubmitting","errors","isValid","touched","handleBlur","handleChange","handleSubmit","Form","concat","htmlFor","Field","onChange","onBlur","name","type","placeholder","disabled","Object","keys","length"],"sourceRoot":""}