{"version":3,"file":"static/js/472.0de2ca53.chunk.js","mappings":"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","sources":["components/error/ErrorCard.tsx","components/courseCard/CourseCard.tsx","pages/home/Home.tsx"],"sourcesContent":["import \"./ErrorCard.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface ErrorCardProps {\r\n    message: string;\r\n    fill?: boolean;\r\n    onTop?: boolean;\r\n    position?: \"relative\" | \"absolute\";\r\n}\r\n\r\nfunction ErrorCard({\r\n    message,\r\n    position = \"absolute\",\r\n    fill = false,\r\n    onTop = false,\r\n}: ErrorCardProps) {\r\n    return (\r\n        <div className={`error-card ${fill && \"fill\"} ${onTop && \"on-top\"}`}>\r\n            <div className=\"error-card__wrapper\">\r\n                <div className=\"icon\">\r\n                    <FontAwesomeIcon icon={faXmark} />\r\n                </div>\r\n                {message}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorCard;\r\n","import \"./CourseCard.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface CourseCardProps {\r\n    id: string;\r\n    img: string;\r\n    title: string;\r\n    description: string;\r\n    durationInMinutes: number;\r\n    level: string;\r\n    isPremium: boolean;\r\n    setCourseId: (couresId: string) => void;\r\n}\r\n\r\nfunction CourseCard({\r\n    id,\r\n    img,\r\n    title,\r\n    description,\r\n    durationInMinutes,\r\n    level,\r\n    isPremium,\r\n    setCourseId,\r\n}: CourseCardProps) {\r\n    const levelObj = {\r\n        beginner: \"is-easy\",\r\n        intermediate: \"is-medium\",\r\n        advanced: \"is-hard\",\r\n    };\r\n\r\n    return (\r\n        <div className=\"course-card\" onClick={() => setCourseId(id)}>\r\n            {!!isPremium && (\r\n                <div className=\"course-card__premium__ribon\">\r\n                    <span>Premium</span>\r\n                </div>\r\n            )}\r\n            <Link to={`/course/${id}`}>\r\n                <div className=\"course-card__img\">\r\n                    <img src={img} alt={`course ${id}`} />\r\n                </div>\r\n                <div className=\"course-card__details\">\r\n                    <h1>\r\n                        {title.length > 55 ? title.slice(0, 55) + \"...\" : title}\r\n                    </h1>\r\n                    <p>{description}</p>\r\n                    <div className=\"tags\">\r\n                        <span className=\"duration\">\r\n                            {(durationInMinutes / 60).toFixed(2)} hours\r\n                        </span>\r\n                        <span\r\n                            className={`level ${\r\n                                levelObj[\r\n                                    level.toLowerCase() as keyof typeof levelObj\r\n                                ]\r\n                            }`}\r\n                        >\r\n                            {level}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseCard;\r\n","import \"./Home.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CourseCard from \"../../components/courseCard/CourseCard\";\r\nimport Loading from \"../../components/loading/Loading\";\r\nimport ErrorCard from \"../../components/error/ErrorCard\";\r\nimport { Course } from \"../../types/types\";\r\nimport { useCourse } from \"../../contexts/CourseContext\";\r\nimport { useAccessToken } from \"../../contexts/AccessTokenContext\";\r\n\r\nfunction Home() {\r\n    const [courses, setCourses] = useState<Course[]>([]);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<string>(\"\");\r\n    const { setCourseId } = useCourse();\r\n    const accessToken = useAccessToken();\r\n\r\n    useEffect(() => {\r\n        const getCourses = async () => {\r\n            try {\r\n                setError(\"\");\r\n                setLoading(true);\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + \"/api/courses\",\r\n                    {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                    }\r\n                );\r\n                const data = await response.json();\r\n\r\n                if (response.status !== 200) throw new Error(data.message);\r\n\r\n                setCourses(data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setLoading(false);\r\n                if (err instanceof Error) {\r\n                    setError(err.message);\r\n                } else {\r\n                    setError(\"Error fetching data from server\");\r\n                }\r\n            }\r\n        };\r\n\r\n        getCourses();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home__featured\">\r\n                <div className=\"container\">\r\n                    <div className=\"home__featured__wrapper\">\r\n                        {loading || error ? (\r\n                            <div className=\"home__featured__status\">\r\n                                {loading && <Loading />}\r\n                                {error && <ErrorCard message={error} />}\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"home__featured__content\">\r\n                                {courses.map(\r\n                                    (\r\n                                        {\r\n                                            id,\r\n                                            title,\r\n                                            description,\r\n                                            level,\r\n                                            imgUrl,\r\n                                            durationInMinutes,\r\n                                            isPremium,\r\n                                        }: Course,\r\n                                        idx: number\r\n                                    ) => (\r\n                                        <CourseCard\r\n                                            id={id}\r\n                                            title={title}\r\n                                            description={description}\r\n                                            durationInMinutes={\r\n                                                durationInMinutes\r\n                                            }\r\n                                            level={level}\r\n                                            img={imgUrl}\r\n                                            isPremium={isPremium}\r\n                                            key={idx}\r\n                                            setCourseId={setCourseId}\r\n                                        />\r\n                                    )\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["_ref","message","position","fill","onTop","_jsx","className","concat","children","_jsxs","FontAwesomeIcon","icon","faXmark","id","img","title","description","durationInMinutes","level","isPremium","setCourseId","onClick","Link","to","src","alt","length","slice","toFixed","beginner","intermediate","advanced","toLowerCase","courses","setCourses","useState","loading","setLoading","error","setError","useCourse","accessToken","useAccessToken","useEffect","async","response","fetch","process","method","headers","data","json","status","Error","err","getCourses","Loading","ErrorCard","map","idx","imgUrl","CourseCard"],"sourceRoot":""}