{"version":3,"file":"static/js/820.6759bbf4.chunk.js","mappings":"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","sources":["components/error/ErrorCard.tsx","components/dashboard/header/Header.tsx","components/dashboard/statBox/StatBox.tsx","pages/dashboard/overview/Overview.tsx","components/textImage/TextImage.tsx","components/dashboard/sidebar/Sidebar.tsx","components/dashboard/topbar/Topbar.tsx","pages/dashboard/users/Users.tsx","pages/dashboard/addUser/AddUser.tsx","pages/dashboard/addInstructor/AddInstructor.tsx","components/confrimCard/ConfirmCard.tsx","components/dashboard/courseDisplay/CourseDisplay.tsx","pages/dashboard/courses/Courses.tsx","pages/dashboard/invoices/Invoices.tsx","pages/dashboard/Dashboard.tsx"],"sourcesContent":["import \"./ErrorCard.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface ErrorCardProps {\r\n    message: string;\r\n    fill?: boolean;\r\n    onTop?: boolean;\r\n    position?: \"relative\" | \"absolute\";\r\n}\r\n\r\nfunction ErrorCard({\r\n    message,\r\n    position = \"absolute\",\r\n    fill = false,\r\n    onTop = false,\r\n}: ErrorCardProps) {\r\n    return (\r\n        <div className={`error-card ${fill && \"fill\"} ${onTop && \"on-top\"}`}>\r\n            <div className=\"error-card__wrapper\">\r\n                <div className=\"icon\">\r\n                    <FontAwesomeIcon icon={faXmark} />\r\n                </div>\r\n                {message}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorCard;\r\n","interface HeaderProps {\r\n    title: string;\r\n    subtitle: string;\r\n}\r\n\r\nconst Header = ({ title, subtitle }: HeaderProps) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                marginBottom: \"15px\",\r\n            }}\r\n        >\r\n            <h2\r\n                style={{\r\n                    color: \"var(--primary-text-color)\",\r\n                    fontSize: \"32px\",\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: \"5px\",\r\n                }}\r\n            >\r\n                {title}\r\n            </h2>\r\n            <h5\r\n                style={{\r\n                    color: \"var(--light-green-text-color)\",\r\n                    fontWeight: \"400\",\r\n                    fontSize: \"16px\",\r\n                }}\r\n            >\r\n                {subtitle}\r\n            </h5>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"./StatBox.scss\";\r\n\r\ninterface StatBoxProps {\r\n    to: string;\r\n    value: string;\r\n    subtitle: string;\r\n    icon: JSX.Element;\r\n}\r\n\r\nfunction StatBox({ to, value, subtitle, icon }: StatBoxProps) {\r\n    return (\r\n        <Link\r\n            style={{\r\n                width: \"100%\",\r\n                margin: \"0px 30px\",\r\n                height: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n            }}\r\n            to={`/${to}`}\r\n        >\r\n            <div className=\"stat-box\">\r\n                <div className=\"stat-box__header\">\r\n                    {icon}\r\n                    <h4 style={{ color: \"var(--primary-text-color)\" }}>\r\n                        {value}\r\n                    </h4>\r\n                </div>\r\n                <div className=\"stat-box__details\">\r\n                    <h5>{subtitle}</h5>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default StatBox;\r\n","import \"./Overview.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faUser,\r\n    faUserPlus,\r\n    faStar,\r\n    faChartLine,\r\n    faVideo,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Header from \"../../../components/dashboard/header/Header\";\r\nimport StatBox from \"../../../components/dashboard/statBox/StatBox\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\n\r\nfunction Overview() {\r\n    const [usersCount, setUsersCount] = useState<number>(0);\r\n    const [monthlyIncome, setMonthlyIncome] = useState<number>(0);\r\n    const [totalSubscriptions, setTotalSubscriptions] = useState<number>(0);\r\n    const [totalCourses, setTotalCourses] = useState<number>(0);\r\n\r\n    const accessToken = useAccessToken();\r\n\r\n    useEffect(() => {\r\n        // Fetch data from the API\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + \"/api/dashboard/overview\",\r\n                    {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if (response.ok) {\r\n                    const {\r\n                        totalUsers,\r\n                        premiumUsers,\r\n                        totalCourses,\r\n                        totalIncome,\r\n                    } = await response.json();\r\n                    setUsersCount(totalUsers);\r\n                    setMonthlyIncome(totalIncome);\r\n                    setTotalSubscriptions(premiumUsers);\r\n                    setTotalCourses(totalCourses);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching data: \", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    });\r\n\r\n    return (\r\n        <div className=\"dashboard-overview\">\r\n            <Header title=\"Overview\" subtitle=\"Welcome to my dashboard\" />\r\n\r\n            <div className=\"dashboard-overview__content\">\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 3\",\r\n                    }}\r\n                >\r\n                    <StatBox\r\n                        to=\"users\"\r\n                        value={usersCount.toString()}\r\n                        subtitle=\"Total Users\"\r\n                        icon={\r\n                            <FontAwesomeIcon className=\"icon\" icon={faUser} />\r\n                        }\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 3\",\r\n                    }}\r\n                >\r\n                    <StatBox\r\n                        to=\"\"\r\n                        value={`${monthlyIncome}$`}\r\n                        subtitle=\"Monthly income\"\r\n                        icon={\r\n                            <FontAwesomeIcon\r\n                                className=\"icon\"\r\n                                icon={faChartLine}\r\n                            />\r\n                        }\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 3\",\r\n                    }}\r\n                >\r\n                    <StatBox\r\n                        to=\"\"\r\n                        value={totalSubscriptions.toString()}\r\n                        subtitle=\"Total Subscription\"\r\n                        icon={\r\n                            <FontAwesomeIcon className=\"icon\" icon={faStar} />\r\n                        }\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 3\",\r\n                    }}\r\n                >\r\n                    <StatBox\r\n                        to=\"\"\r\n                        value={totalCourses.toString()}\r\n                        subtitle=\"Total Courses\"\r\n                        icon={\r\n                            <FontAwesomeIcon className=\"icon\" icon={faVideo} />\r\n                        }\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 8\",\r\n                        gridRow: \"span 2\",\r\n                    }}\r\n                >\r\n                    <h3>Card 5</h3>\r\n                </div>\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 4\",\r\n                        gridRow: \"span 2\",\r\n                    }}\r\n                >\r\n                    <h3>Card 6</h3>\r\n                </div>\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 3\",\r\n                    }}\r\n                >\r\n                    <h3>Card 7</h3>\r\n                </div>\r\n                <div\r\n                    className=\"content__card\"\r\n                    style={{\r\n                        gridColumn: \"span 3\",\r\n                    }}\r\n                >\r\n                    <h3>Card 8</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Overview;\r\n","import \"./TextImage.scss\";\r\n\r\n// Function to generate random color\r\nfunction randomColor(): string {\r\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n}\r\n\r\ninterface TextImageProps {\r\n    text: string;\r\n}\r\n\r\nfunction TextImage({ text }: TextImageProps) {\r\n    const textArray = text.split(\" \");\r\n    const textToDisplay =\r\n        textArray.length < 2\r\n            ? `${textArray[0][0]}`\r\n            : `${textArray[0][0] + textArray[1][0]}`;\r\n\r\n    const color = randomColor();\r\n\r\n    return (\r\n        <div\r\n            className=\"generated-image__wrapper\"\r\n            style={{\r\n                backgroundColor: color ? color : \"#00ff55\",\r\n            }}\r\n        >\r\n            {textToDisplay}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextImage;\r\n","import \"./Sidebar.scss\";\r\nimport { memo, useState } from \"react\";\r\nimport { Sidebar as ProSideBar, Menu, MenuItem } from \"react-pro-sidebar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faHome,\r\n    faPeopleArrows,\r\n    faFileInvoice,\r\n    faUserPlus,\r\n    faBars,\r\n    faGraduationCap,\r\n    faVideo,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTheme } from \"../../../contexts/ThemeContext\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\nimport TextImage from \"../../textImage/TextImage\";\r\nimport { LocalUser } from \"../../../types/types\";\r\n\r\ninterface UserInfoProps {\r\n    user: LocalUser | null;\r\n}\r\n\r\nconst UserInfo = memo(({ user }: UserInfoProps) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"35px\",\r\n                height: \"35px\",\r\n                cursor: \"pointer\",\r\n                borderRadius: \"50%\",\r\n                overflow: \"hidden\",\r\n                color: \"white\",\r\n            }}\r\n        >\r\n            {user && user.photoURL ? (\r\n                <img\r\n                    src={user.photoURL}\r\n                    style={{\r\n                        display: \"block\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"contain\",\r\n                    }}\r\n                    alt=\"profile-user\"\r\n                />\r\n            ) : (\r\n                <TextImage\r\n                    text={\r\n                        user && user.displayName\r\n                            ? user.displayName\r\n                            : \"Uknown User\"\r\n                    }\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\ninterface ItemProps {\r\n    title: string;\r\n    to: string;\r\n    icon: JSX.Element;\r\n    selected: string;\r\n    setSelected: (title: string) => void;\r\n}\r\n\r\nconst Item = ({ title, to, icon, selected, setSelected }: ItemProps) => {\r\n    return (\r\n        <MenuItem\r\n            component={<Link to={`/${to}`} />}\r\n            active={selected === to}\r\n            style={{\r\n                color: \"var(--primary-text-color)\",\r\n                borderRadius: \"10px\",\r\n                fontSize: \"14px\",\r\n                fontWeight: \"500\",\r\n            }}\r\n            onClick={() => setSelected(to)}\r\n            icon={icon}\r\n        >\r\n            <p>{title}</p>\r\n        </MenuItem>\r\n    );\r\n};\r\n\r\nconst Sidebar = () => {\r\n    const { theme } = useTheme();\r\n    const [isOpen, SetIsOpen] = useState(true);\r\n\r\n    // Get the last part of the current URL\r\n    const currentUrl = window.location.pathname.split(\"/\").pop();\r\n\r\n    const [selected, setSelected] = useState<string>(\r\n        currentUrl === \"dashboard\" ? \"\" : currentUrl ?? \"\"\r\n    );\r\n\r\n    const { user } = useAuth();\r\n\r\n    const items = [\r\n        {\r\n            subtitle: \"\",\r\n            items: [\r\n                {\r\n                    title: \"Dashboard\",\r\n                    to: \"\",\r\n                    icon: <FontAwesomeIcon icon={faHome} />,\r\n                    selected,\r\n                    setSelected,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            subtitle: \"Data\",\r\n            items: [\r\n                {\r\n                    title: \"Manage Users\",\r\n                    to: \"users\",\r\n                    icon: <FontAwesomeIcon icon={faPeopleArrows} />,\r\n                    selected,\r\n                    setSelected,\r\n                },\r\n                {\r\n                    title: \"Invoices\",\r\n                    to: \"invoices\",\r\n                    icon: <FontAwesomeIcon icon={faFileInvoice} />,\r\n                    selected,\r\n                    setSelected,\r\n                },\r\n                {\r\n                    title: \"Courses\",\r\n                    to: \"courses\",\r\n                    icon: <FontAwesomeIcon icon={faVideo} />,\r\n                    selected,\r\n                    setSelected,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            subtitle: \"Pages\",\r\n            items: [\r\n                {\r\n                    title: \"Add User\",\r\n                    to: \"addUser\",\r\n                    icon: <FontAwesomeIcon icon={faUserPlus} />,\r\n                    selected,\r\n                    setSelected,\r\n                },\r\n                {\r\n                    title: \"Add Instructor\",\r\n                    to: \"addInstructor\",\r\n                    icon: <FontAwesomeIcon icon={faGraduationCap} />,\r\n                    selected,\r\n                    setSelected,\r\n                },\r\n            ],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className={`sidebar`}>\r\n            <ProSideBar\r\n                collapsed={!isOpen}\r\n                style={{\r\n                    backgroundColor: `var(--primary-background-color) !important`,\r\n                }}\r\n            >\r\n                <Menu>\r\n                    <MenuItem\r\n                        className=\"sidebar__menu-header\"\r\n                        icon={\r\n                            !isOpen ? (\r\n                                <button\r\n                                    className=\"sidebar__menu-button\"\r\n                                    onClick={() => SetIsOpen(!isOpen)}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faBars} />\r\n                                </button>\r\n                            ) : undefined\r\n                        }\r\n                        style={{\r\n                            margin: \"10px 0 20px 0\",\r\n                        }}\r\n                    >\r\n                        {isOpen && (\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-between\",\r\n                                    alignItems: \"center\",\r\n                                    marginLeft: \"15px\",\r\n                                }}\r\n                            >\r\n                                <h3\r\n                                    style={{\r\n                                        fontSize: \"24px\",\r\n                                        fontWeight: \"400\",\r\n                                    }}\r\n                                >\r\n                                    BINEAST\r\n                                </h3>\r\n                                <button\r\n                                    className=\"sidebar__menu-button\"\r\n                                    onClick={() => SetIsOpen(!isOpen)}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faBars} />\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </MenuItem>\r\n                    <div\r\n                        style={{\r\n                            display: `${isOpen ? \"flex\" : \"none\"}`,\r\n                            textAlign: \"center\",\r\n                            padding: \"10% 0 10% 10%\",\r\n                            borderTop: `1px solid var(--secondary-text-color)`,\r\n                            borderBottom: `1px solid var(--secondary-text-color)`,\r\n                            alignItems: \"center\",\r\n                        }}\r\n                    >\r\n                        <UserInfo user={user} />\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                flex: \"1\",\r\n                            }}\r\n                        >\r\n                            <h5\r\n                                style={{\r\n                                    color: \"var(--primary-text-color)\",\r\n                                    fontWeight: \"700\",\r\n                                    fontSize: \"16px\",\r\n                                    marginTop: \"4px\",\r\n                                }}\r\n                            >\r\n                                {user ? user.displayName : \"Unknown User\"}\r\n                            </h5>\r\n                            <h6\r\n                                style={{\r\n                                    color: \"var(--light-green-text-color)\",\r\n                                    fontWeight: \"500\",\r\n                                    fontSize: \"14px\",\r\n                                    textTransform: \"capitalize\",\r\n                                }}\r\n                            >\r\n                                {user ? user.role : \"user\"}\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div\r\n                        className={`sidebar-items ${theme}`}\r\n                        style={{\r\n                            padding: isOpen ? \"10%\" : undefined,\r\n                        }}\r\n                    >\r\n                        {items.map((item, index) => (\r\n                            <span key={index}>\r\n                                {item.subtitle && (\r\n                                    <h6 className=\"sidebar-items__subtitle\">\r\n                                        {item.subtitle}\r\n                                    </h6>\r\n                                )}\r\n                                {item.items.map((item, index) => (\r\n                                    <Item\r\n                                        key={index}\r\n                                        title={item.title}\r\n                                        to={item.to}\r\n                                        icon={item.icon}\r\n                                        selected={selected}\r\n                                        setSelected={setSelected}\r\n                                    />\r\n                                ))}\r\n                            </span>\r\n                        ))}\r\n                    </div>\r\n                </Menu>\r\n            </ProSideBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","import \"./Topbar.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faBell,\r\n    faUser,\r\n    faSun,\r\n    faMoon,\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faGear, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTheme } from \"../../../contexts/ThemeContext\";\r\n\r\nconst Topbar = () => {\r\n    const { theme, toggleTheme } = useTheme();\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                padding: \"15px\",\r\n            }}\r\n            className=\"topbar\"\r\n        >\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    borderRadius: \"6px\",\r\n                    backgroundColor: \"var(--secondary-background-color)\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        marginLeft: \"16px\",\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <input\r\n                        className=\"topbar__search-input\"\r\n                        type=\"text\"\r\n                        placeholder=\"Search\"\r\n                    />\r\n                </div>\r\n                <button style={{ padding: 1 }}>\r\n                    <FontAwesomeIcon icon={faSearch} />\r\n                </button>\r\n            </div>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                <button onClick={() => toggleTheme()}>\r\n                    {theme === \"light\" ? (\r\n                        <FontAwesomeIcon icon={faMoon} />\r\n                    ) : (\r\n                        <FontAwesomeIcon icon={faSun} />\r\n                    )}\r\n                </button>\r\n                <button>\r\n                    <FontAwesomeIcon icon={faBell} />\r\n                </button>\r\n                <button>\r\n                    <FontAwesomeIcon icon={faGear} />\r\n                </button>\r\n                <button>\r\n                    <FontAwesomeIcon icon={faUser} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Topbar;\r\n","import \"./Users.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Header from \"../../../components/dashboard/header/Header\";\r\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faCircleCheck,\r\n    faGraduationCap,\r\n    faLock,\r\n    faUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { UserFromDB } from \"../../../types/types\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\n\r\ninterface UserRoleProps {\r\n    userId: string;\r\n    role: string;\r\n}\r\n\r\nconst UserRole = ({ userId, role }: UserRoleProps) => {\r\n    const [prevChoice, setPrevChoice] = useState(role);\r\n    const [choice, setChoice] = useState(role);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const accessToken = useAccessToken();\r\n\r\n    const roleIcons: { [key: string]: JSX.Element } = {\r\n        ADMIN: <FontAwesomeIcon style={{ fontSize: \"11px\" }} icon={faLock} />,\r\n        INSTRUCTOR: (\r\n            <FontAwesomeIcon\r\n                style={{ fontSize: \"11px\" }}\r\n                icon={faGraduationCap}\r\n            />\r\n        ),\r\n        USER: <FontAwesomeIcon style={{ fontSize: \"11px\" }} icon={faUser} />,\r\n    };\r\n\r\n    const handleChangeRole = (role: string) => {\r\n        setChoice(role);\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const handleUpdate = () => {\r\n        const updateUserRole = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + \"/api/users/\" + userId,\r\n                    {\r\n                        method: \"PATCH\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            role: choice,\r\n                        }),\r\n                    }\r\n                );\r\n\r\n                if (response.ok) {\r\n                    setPrevChoice(choice);\r\n                    setIsEditing(false);\r\n                } else {\r\n                    setChoice(prevChoice);\r\n                }\r\n            } catch (error) {}\r\n        };\r\n\r\n        updateUserRole();\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setChoice(prevChoice);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    if (isEditing) {\r\n        return (\r\n            <div className=\"users-table__confirm__role\">\r\n                <span className=\"is-easy hover\" onClick={handleUpdate}>\r\n                    Update\r\n                </span>\r\n                <span className=\"is-hard hover\" onClick={handleCancel}>\r\n                    Cancel\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"60%\",\r\n                margin: \"0 auto\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            }}\r\n        >\r\n            <span className=\"icon\">{roleIcons[role]}</span>\r\n            <select\r\n                className=\"users-table__role\"\r\n                value={choice}\r\n                onChange={(e) => handleChangeRole(e.target.value)}\r\n            >\r\n                {Object.keys(roleIcons).map((role) => (\r\n                    <option key={role} value={role}>\r\n                        {role}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Users = () => {\r\n    const [users, setUsers] = useState<UserFromDB[]>([]);\r\n\r\n    const accessToken = useAccessToken();\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + \"/api/users\",\r\n                    {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                const data = await response.json();\r\n                setUsers(data);\r\n            } catch (error) {}\r\n        };\r\n\r\n        fetchUsers();\r\n    }, [accessToken]);\r\n\r\n    const columns: GridColDef<UserFromDB>[] = [\r\n        { field: \"id\", headerName: \"ID\" },\r\n        { field: \"email\", headerName: \"Email\", flex: 1 },\r\n        {\r\n            field: \"role\",\r\n            headerName: \"Role\",\r\n            flex: 1,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n            renderCell: ({ row: { role, id } }) => (\r\n                <UserRole userId={id} role={role} />\r\n            ),\r\n        },\r\n        {\r\n            field: \"isPremium\",\r\n            headerName: \"Premium\",\r\n            flex: 1,\r\n            renderCell: ({ row: { isPremium } }) => {\r\n                return (\r\n                    <div>\r\n                        <FontAwesomeIcon\r\n                            style={{\r\n                                color: isPremium ? \"#3fb24b\" : \"grey\",\r\n                            }}\r\n                            icon={faCircleCheck}\r\n                        />\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n    return (\r\n        <div className=\"dashboard-users\">\r\n            <Header\r\n                title=\"Users\"\r\n                subtitle=\"In this page you can manage users\"\r\n            />\r\n            <div className=\"users-table\">\r\n                <DataGrid\r\n                    sx={{\r\n                        \"&.MuiDataGrid-root .MuiDataGrid-cell:focus-within\": {\r\n                            outline: \"none !important\",\r\n                        },\r\n\r\n                        \"& .MuiDataGrid-filler\": {\r\n                            height: \"1px !important\",\r\n                        },\r\n\r\n                        \"& .MuiDataGrid-overlayWrapper\": {\r\n                            height: \"55px !important\",\r\n                        },\r\n                    }}\r\n                    rows={users}\r\n                    columns={columns}\r\n                    slots={{\r\n                        noRowsOverlay: () => (\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\",\r\n                                    height: \"100%\",\r\n                                    color: \"var(--primary-text-color)\",\r\n                                }}\r\n                            >\r\n                                No users found\r\n                            </div>\r\n                        ),\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n","import Header from \"../../../components/dashboard/header/Header\";\r\nimport \"./AddUser.scss\";\r\n\r\nfunction AddUser() {\r\n    return (\r\n        <div className=\"dashboard-addUser\">\r\n            <Header title=\"Add User\" subtitle=\"Add a new user to the system\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddUser;\r\n","import Header from \"../../../components/dashboard/header/Header\";\r\n\r\nfunction AddInstructor() {\r\n    return (\r\n        <div className=\"dashboard-addInstructor\">\r\n            <Header\r\n                title=\"Add Instructor\"\r\n                subtitle=\"Add a new instructor to the system\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddInstructor;\r\n","import { useEffect, useRef } from \"react\";\r\nimport \"./ConfirmCard.scss\";\r\nimport { useTheme } from \"../../contexts/ThemeContext\";\r\n\r\ninterface ConfrimCardProps {\r\n    setIsDelete: (state: boolean) => void;\r\n    setIsConfirm: (state: boolean) => void;\r\n    setRefresh: (state: any) => void;\r\n}\r\n\r\nfunction ConfirmCard({ setIsConfirm, setIsDelete }: ConfrimCardProps) {\r\n    const wrapperRef = useRef<HTMLDivElement>(null);\r\n    const { theme } = useTheme();\r\n\r\n    useEffect(() => {\r\n        function handleClickOutside(event: MouseEvent) {\r\n            if (\r\n                wrapperRef.current &&\r\n                !wrapperRef.current.contains(event.target as Node)\r\n            ) {\r\n                setIsConfirm(false);\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [wrapperRef, setIsConfirm]);\r\n\r\n    return (\r\n        <div className={`confirm-card ${theme}`}>\r\n            <div ref={wrapperRef} className=\"confirm-card__wrapper\">\r\n                <h4>Are you sure?</h4>\r\n                <div className=\"confirm-card__wrapper__control\">\r\n                    <span\r\n                        className=\"is-easy hover\"\r\n                        onClick={() => {\r\n                            setIsDelete(true);\r\n                            setIsConfirm(false);\r\n                        }}\r\n                    >\r\n                        Confirm\r\n                    </span>\r\n                    <span\r\n                        className=\"is-hard hover\"\r\n                        onClick={() => setIsConfirm(false)}\r\n                    >\r\n                        Cancel\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmCard;\r\n","import \"./CourseDisplay.scss\";\r\nimport { Course } from \"../../../types/types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ConfirmCard from \"../../confrimCard/ConfirmCard\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\n\r\ninterface CourseDisplayProps {\r\n    course: Course;\r\n    setRefresh: (state: any) => void;\r\n}\r\n\r\nfunction CourseDisplay({ course, setRefresh }: CourseDisplayProps) {\r\n    const [isConfirm, setIsConfirm] = useState(false);\r\n    const [isDelete, setIsDelete] = useState(false);\r\n    const {\r\n        id,\r\n        imgUrl,\r\n        title,\r\n        description,\r\n        durationInMinutes,\r\n        level,\r\n        isPremium,\r\n    } = course;\r\n\r\n    const accessToken = useAccessToken();\r\n\r\n    const handleClick = () => {\r\n        // logic\r\n    };\r\n\r\n    useEffect(() => {\r\n        const deleteCourse = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + `/api/courses/${id}`,\r\n                    {\r\n                        method: \"DELETE\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if (response.ok) {\r\n                    setRefresh((prev: boolean) => !prev);\r\n                    setIsDelete(false);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        if (isDelete) deleteCourse();\r\n    }, [isDelete, accessToken, id, setRefresh]);\r\n\r\n    function handleDeleteClick() {\r\n        setIsConfirm(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"course-display\" onClick={handleClick}>\r\n            {isConfirm && (\r\n                <ConfirmCard\r\n                    setIsConfirm={setIsConfirm}\r\n                    setIsDelete={setIsDelete}\r\n                    setRefresh={setRefresh}\r\n                />\r\n            )}\r\n            <div className=\"course-display__img\">\r\n                <img src={imgUrl} alt={title} />\r\n            </div>\r\n            <div className=\"course-display__content\">\r\n                <div>\r\n                    <h1>{title}</h1>\r\n                    <p>{description}</p>\r\n                </div>\r\n                <div className=\"course-display__content__details\">\r\n                    <div className=\"course-display__content__details__duration\">\r\n                        Duration: {durationInMinutes} minutes\r\n                    </div>\r\n                    <div className=\"course-display__content__details__level\">\r\n                        Level: {level}\r\n                    </div>\r\n                    <div className=\"course-display__content__details__is-premium\">\r\n                        {isPremium ? \"Premium\" : \"Free\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"course-display__control\">\r\n                <span className=\"edit\">\r\n                    <FontAwesomeIcon icon={faEdit} />\r\n                </span>\r\n                <span className=\"delete\" onClick={handleDeleteClick}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseDisplay;\r\n","import \"./Courses.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Header from \"../../../components/dashboard/header/Header\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\nimport { Course } from \"../../../types/types\";\r\nimport Loading from \"../../../components/loading/Loading\";\r\nimport CourseDisplay from \"../../../components/dashboard/courseDisplay/CourseDisplay\";\r\nimport ErrorCard from \"../../../components/error/ErrorCard\";\r\n\r\nfunction Courses() {\r\n    const [courses, setCourses] = useState<Course[]>([]);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<string>(\"\");\r\n    const [refresh, setRefresh] = useState<boolean>(false);\r\n\r\n    const accessToken = useAccessToken();\r\n\r\n    useEffect(() => {\r\n        const getCourses = async () => {\r\n            try {\r\n                setError(\"\");\r\n                setLoading(true);\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + \"/api/courses\",\r\n                    {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                    }\r\n                );\r\n                const data = await response.json();\r\n\r\n                if (response.status !== 200) throw new Error(data.message);\r\n\r\n                setCourses(data);\r\n                setLoading(false);\r\n                if (data.length === 0) setError(\"No courses available\");\r\n            } catch (err) {\r\n                setLoading(false);\r\n                if (err instanceof Error) {\r\n                    setError(err.message);\r\n                } else {\r\n                    setError(\"Error fetching data from server\");\r\n                }\r\n            }\r\n        };\r\n        getCourses();\r\n    }, [refresh, accessToken]);\r\n\r\n    return (\r\n        <div className=\"dashboard-courses\">\r\n            <Header\r\n                title=\"Courses\"\r\n                subtitle=\"In this page you can manage courses\"\r\n            />\r\n            <div className=\"courses\">\r\n                {loading || error ? (\r\n                    <div className=\"dashboard-courses__status\">\r\n                        {loading ? <Loading /> : <ErrorCard message={error} />}\r\n                    </div>\r\n                ) : (\r\n                    courses.map((course) => (\r\n                        <CourseDisplay\r\n                            key={course.id}\r\n                            setRefresh={setRefresh}\r\n                            course={course}\r\n                        />\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Courses;\r\n","import { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\nimport Header from \"../../../components/dashboard/header/Header\";\r\nimport \"./Invoices.scss\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Invoice } from \"../../../types/types\";\r\n\r\nfunction Invoices() {\r\n    const [invoices, setInvoices] = useState<Partial<Invoice>[]>([]);\r\n\r\n    const accessToken = useAccessToken();\r\n\r\n    useEffect(() => {\r\n        const fetchInvoices = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + \"/api/dashboard/invoices\",\r\n                    {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                const data = await response.json();\r\n\r\n                console.log(data);\r\n                setInvoices(data);\r\n            } catch (error) {}\r\n        };\r\n\r\n        fetchInvoices();\r\n    }, [accessToken]);\r\n\r\n    const columns: GridColDef<Partial<Invoice>>[] = [\r\n        { field: \"id\", headerName: \"Invoice ID\", flex: 1 },\r\n        { field: \"userId\", headerName: \"User Id\", flex: 1 },\r\n        {\r\n            field: \"endDate\",\r\n            headerName: \"End Date\",\r\n            flex: 1,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n            renderCell: ({ row: { endDate } }) => {\r\n                const formatted = new Date(\r\n                    endDate as string\r\n                ).toLocaleDateString();\r\n                return formatted;\r\n            },\r\n        },\r\n        {\r\n            field: \"status\",\r\n            headerName: \"Status\",\r\n            flex: 1,\r\n        },\r\n    ];\r\n    return (\r\n        <div className=\"dashboard-invoices\">\r\n            <Header\r\n                title=\"Invoices\"\r\n                subtitle=\"In this page you can view all invoices\"\r\n            />\r\n\r\n            <div className=\"invoices-table\">\r\n                <DataGrid\r\n                    sx={{\r\n                        \"&.MuiDataGrid-root .MuiDataGrid-cell:focus-within\": {\r\n                            outline: \"none !important\",\r\n                        },\r\n\r\n                        \"& .MuiDataGrid-filler\": {\r\n                            height: \"1px !important\",\r\n                        },\r\n\r\n                        \"& .MuiDataGrid-overlayWrapper\": {\r\n                            height: \"55px !important\",\r\n                        },\r\n                    }}\r\n                    rows={invoices}\r\n                    columns={columns}\r\n                    slots={{\r\n                        noRowsOverlay: () => (\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\",\r\n                                    height: \"100%\",\r\n                                    color: \"var(--primary-text-color)\",\r\n                                }}\r\n                            >\r\n                                No Invoices at the moment\r\n                            </div>\r\n                        ),\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Invoices;\r\n","import \"./Dashboard.scss\";\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\nimport Overview from \"./overview/Overview\";\r\nimport Sidebar from \"../../components/dashboard/sidebar/Sidebar\";\r\nimport Topbar from \"../../components/dashboard/topbar/Topbar\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport Users from \"./users/Users\";\r\nimport AddUser from \"./addUser/AddUser\";\r\nimport AddInstructor from \"./addInstructor/AddInstructor\";\r\nimport Courses from \"./courses/Courses\";\r\nimport Invoices from \"./invoices/Invoices\";\r\n\r\nfunction Dashboard() {\r\n    const { user } = useAuth();\r\n\r\n    // if (!user) {\r\n    //     return <Navigate to={\"/login\"} />;\r\n    // }\r\n\r\n    // if (\r\n    //     user.role.toLowerCase() !== \"admin\" &&\r\n    //     user.role.toLowerCase() !== \"instructor\"\r\n    // )\r\n    //     return <div>NOT AUTHORIZED</div>;\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Sidebar />\r\n            <main className=\"content\">\r\n                <Topbar />\r\n                <div className=\"dashboard-section\">\r\n                    <Routes>\r\n                        <Route path=\"/\" element={<Overview />} />\r\n                        <Route path=\"/users\" element={<Users />} />\r\n                        <Route path=\"/addUser\" element={<AddUser />} />\r\n                        <Route\r\n                            path=\"/addInstructor\"\r\n                            element={<AddInstructor />}\r\n                        />\r\n                        <Route path=\"/courses\" element={<Courses />} />\r\n                        <Route path=\"/invoices\" element={<Invoices />} />\r\n                    </Routes>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"names":["_ref","message","position","fill","onTop","_jsx","className","concat","children","_jsxs","FontAwesomeIcon","icon","faXmark","title","subtitle","style","marginBottom","color","fontSize","fontWeight","to","value","Link","width","margin","height","display","justifyContent","flexDirection","usersCount","setUsersCount","useState","monthlyIncome","setMonthlyIncome","totalSubscriptions","setTotalSubscriptions","totalCourses","setTotalCourses","accessToken","useAccessToken","useEffect","async","response","fetch","process","method","headers","ok","totalUsers","premiumUsers","totalIncome","json","error","console","fetchData","Header","gridColumn","StatBox","toString","faUser","faChartLine","faStar","faVideo","gridRow","text","textArray","split","textToDisplay","length","Math","floor","random","backgroundColor","UserInfo","memo","user","cursor","borderRadius","overflow","photoURL","src","objectFit","alt","TextImage","displayName","Item","_ref2","selected","setSelected","MenuItem","component","active","onClick","Sidebar","theme","useTheme","isOpen","SetIsOpen","currentUrl","window","location","pathname","pop","useAuth","items","faHome","faPeopleArrows","faFileInvoice","faUserPlus","faGraduationCap","ProSideBar","collapsed","Menu","undefined","faBars","alignItems","marginLeft","textAlign","padding","borderTop","borderBottom","flex","marginTop","textTransform","role","map","item","index","Topbar","toggleTheme","type","placeholder","faSearch","faMoon","faSun","faBell","faGear","UserRole","userId","prevChoice","setPrevChoice","choice","setChoice","isEditing","setIsEditing","roleIcons","ADMIN","faLock","INSTRUCTOR","USER","handleUpdate","body","JSON","stringify","updateUserRole","handleCancel","onChange","e","handleChangeRole","target","Object","keys","Users","users","setUsers","data","fetchUsers","columns","field","headerName","headerAlign","align","renderCell","row","id","_ref3","isPremium","faCircleCheck","DataGrid","sx","outline","rows","slots","noRowsOverlay","setIsConfirm","setIsDelete","wrapperRef","useRef","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","ref","course","setRefresh","isConfirm","isDelete","imgUrl","description","durationInMinutes","level","prev","log","deleteCourse","handleClick","ConfirmCard","faEdit","faTrash","courses","setCourses","loading","setLoading","setError","refresh","status","Error","err","getCourses","Loading","ErrorCard","CourseDisplay","invoices","setInvoices","fetchInvoices","endDate","Date","toLocaleDateString","Routes","Route","path","element","Overview","AddUser","AddInstructor","Courses","Invoices"],"sourceRoot":""}