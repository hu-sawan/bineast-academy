{"version":3,"file":"static/js/636.6eccb0e1.chunk.js","mappings":"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","sources":["components/confrimCard/ConfirmCard.tsx","components/dashboard/fileInput/FileInput.tsx","components/dashboard/header/Header.tsx","components/error/ErrorCard.tsx","components/dashboard/editVideo/EditVideo.tsx","components/dashboard/videoDisplay/VideoDisplay.tsx","pages/dashboard/videos/Videos.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport \"./ConfirmCard.scss\";\r\nimport { useTheme } from \"../../contexts/ThemeContext\";\r\n\r\ninterface ConfrimCardProps {\r\n    setIsDelete: (state: boolean) => void;\r\n    setIsConfirm: (state: boolean) => void;\r\n    setRefresh: (state: any) => void;\r\n}\r\n\r\nfunction ConfirmCard({ setIsConfirm, setIsDelete }: ConfrimCardProps) {\r\n    const wrapperRef = useRef<HTMLDivElement>(null);\r\n    const { theme } = useTheme();\r\n\r\n    useEffect(() => {\r\n        function handleClickOutside(event: MouseEvent) {\r\n            if (\r\n                wrapperRef.current &&\r\n                !wrapperRef.current.contains(event.target as Node)\r\n            ) {\r\n                setIsConfirm(false);\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [wrapperRef, setIsConfirm]);\r\n\r\n    return (\r\n        <div className={`confirm-card ${theme}`}>\r\n            <div ref={wrapperRef} className=\"confirm-card__wrapper\">\r\n                <h4>Are you sure?</h4>\r\n                <div className=\"confirm-card__wrapper__control\">\r\n                    <span\r\n                        className=\"is-easy hover\"\r\n                        onClick={() => {\r\n                            setIsDelete(true);\r\n                            setIsConfirm(false);\r\n                        }}\r\n                    >\r\n                        Confirm\r\n                    </span>\r\n                    <span\r\n                        className=\"is-hard hover\"\r\n                        onClick={() => setIsConfirm(false)}\r\n                    >\r\n                        Cancel\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmCard;\r\n","import { faArrowUpFromBracket } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useRef } from \"react\";\r\n\r\ninterface FileInputProps {\r\n    displayText: string;\r\n    accept?: string;\r\n    setFile: (file: File) => void;\r\n}\r\n\r\nfunction FileInput({ displayText, setFile, accept }: FileInputProps) {\r\n    const messageRef = useRef<HTMLDivElement>(null);\r\n    return (\r\n        <div className=\"input-wrapper contain-file\">\r\n            <label htmlFor=\"file-input\">\r\n                <FontAwesomeIcon icon={faArrowUpFromBracket} />\r\n                <span>{displayText}</span>\r\n            </label>\r\n            <input\r\n                className=\"file-input\"\r\n                id=\"file-input\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                accept={accept}\r\n                onChange={(e) => {\r\n                    messageRef.current!.innerText = e.target.files![0].name;\r\n                    setFile(e.target.files![0]);\r\n                }}\r\n            />\r\n            <div ref={messageRef} className=\"message\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileInput;\r\n","interface HeaderProps {\r\n    title: string;\r\n    subtitle: string;\r\n}\r\n\r\nconst Header = ({ title, subtitle }: HeaderProps) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                marginBottom: \"15px\",\r\n            }}\r\n        >\r\n            <h2\r\n                style={{\r\n                    color: \"var(--primary-text-color)\",\r\n                    fontSize: \"32px\",\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: \"5px\",\r\n                }}\r\n            >\r\n                {title}\r\n            </h2>\r\n            <h5\r\n                style={{\r\n                    color: \"var(--light-green-text-color)\",\r\n                    fontWeight: \"400\",\r\n                    fontSize: \"16px\",\r\n                }}\r\n            >\r\n                {subtitle}\r\n            </h5>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import \"./ErrorCard.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface ErrorCardProps {\r\n    message: string;\r\n    fill?: boolean;\r\n    onTop?: boolean;\r\n    position?: \"relative\" | \"absolute\";\r\n}\r\n\r\nfunction ErrorCard({\r\n    message,\r\n    position = \"absolute\",\r\n    fill = false,\r\n    onTop = false,\r\n}: ErrorCardProps) {\r\n    return (\r\n        <div className={`error-card ${fill && \"fill\"} ${onTop && \"on-top\"}`}>\r\n            <div className=\"error-card__wrapper\">\r\n                <div className=\"icon\">\r\n                    <FontAwesomeIcon icon={faXmark} />\r\n                </div>\r\n                {message}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorCard;\r\n","import \"./EditVideo.scss\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useTheme } from \"../../../contexts/ThemeContext\";\r\nimport { Video } from \"../../../types/types\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\nimport FileInput from \"../fileInput/FileInput\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\ninterface EditVideoProps {\r\n    video: Video;\r\n    isAdding?: boolean;\r\n    setIsEditing: (state: boolean) => void;\r\n    setRefresh: (state: any) => void;\r\n}\r\n\r\nfunction EditVideo({\r\n    video,\r\n    setIsEditing,\r\n    setRefresh,\r\n    isAdding = false,\r\n}: EditVideoProps) {\r\n    const [videoFile, setVideoFile] = useState<File | null>(null);\r\n    const { theme } = useTheme();\r\n\r\n    const { courseId } = useParams();\r\n\r\n    const accessToken = useAccessToken();\r\n\r\n    const handleFormSubmit = (values: Video) => {\r\n        const updateVideo = async (values: Video) => {\r\n            try {\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + `/api/videos/${video.id}`,\r\n                    {\r\n                        method: \"PUT\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                        body: JSON.stringify(values),\r\n                    }\r\n                );\r\n\r\n                if (response.ok) {\r\n                    setRefresh((prev: boolean) => !prev);\r\n                    setIsEditing(false);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        // TODO: check implementaion\r\n        const addVideo = async (values: Video) => {\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append(\"courseId\", courseId!);\r\n                formData.append(\"video\", videoFile!);\r\n                formData.append(\"title\", values.title);\r\n                formData.append(\"description\", values.description);\r\n                formData.append(\"courseId\", video.courseId);\r\n\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + \"/api/videos\",\r\n                    {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                        body: formData,\r\n                    }\r\n                );\r\n\r\n                if (response.ok) {\r\n                    setRefresh((prev: boolean) => !prev);\r\n                    setIsEditing(false);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        if (isAdding) addVideo(values);\r\n        else updateVideo(values);\r\n    };\r\n\r\n    return (\r\n        <div className={`edit-video ${theme}`}>\r\n            <div className=\"edit-video__wrapper\">\r\n                <span\r\n                    data-tooltip=\"Cancel\"\r\n                    className=\"tooltip bottom cancel\"\r\n                    onClick={() => setIsEditing(false)}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        style={{ display: \"block\" }}\r\n                        icon={faXmark}\r\n                    />\r\n                </span>\r\n                <Formik\r\n                    initialValues={video}\r\n                    onSubmit={handleFormSubmit}\r\n                    validationSchema={checkoutSchema}\r\n                >\r\n                    {({\r\n                        isSubmitting,\r\n                        values,\r\n                        errors,\r\n                        isValid,\r\n                        handleBlur,\r\n                        handleChange,\r\n                        handleSubmit,\r\n                    }) => (\r\n                        <Form\r\n                            className=\"dashboard-form\"\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n                            <div\r\n                                data-error={errors.title ? errors.title : \"\"}\r\n                                className={`input-wrapper ${\r\n                                    errors.title ? \"error\" : \"\"\r\n                                }`}\r\n                            >\r\n                                <label htmlFor=\"title\">Video Title:</label>\r\n                                <Field\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={errors.title ? \"error\" : \"\"}\r\n                                    name=\"title\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Video Title\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                className={`input-wrapper ${\r\n                                    errors.description ? \"error\" : \"\"\r\n                                }`}\r\n                                data-error={\r\n                                    errors.description ? errors.description : \"\"\r\n                                }\r\n                            >\r\n                                {/* TODO: replace it with a md editor */}\r\n                                <label htmlFor=\"description\">\r\n                                    Video Description:\r\n                                </label>\r\n                                <Field\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={\r\n                                        errors.description ? \"error\" : \"\"\r\n                                    }\r\n                                    name=\"description\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Video Description\"\r\n                                />\r\n                            </div>\r\n                            {!isAdding && (\r\n                                <div className=\"two-inputs\">\r\n                                    <div className=\"input-wrapper\">\r\n                                        <label htmlFor=\"durationInMinutes\">\r\n                                            Duration In Minutes:\r\n                                        </label>\r\n                                        <Field\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            name=\"durationInMinutes\"\r\n                                            type=\"text\"\r\n                                            disabled\r\n                                        />\r\n                                    </div>\r\n                                    <div\r\n                                        className={`input-wrapper ${\r\n                                            errors.orderNb ? \"error\" : \"\"\r\n                                        }`}\r\n                                        data-error={\r\n                                            errors.orderNb ? errors.orderNb : \"\"\r\n                                        }\r\n                                    >\r\n                                        <label htmlFor=\"orderNb\">\r\n                                            Change Video Order:\r\n                                        </label>\r\n                                        <Field\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            name=\"orderNb\"\r\n                                            className={\r\n                                                errors.orderNb ? \"error\" : \"\"\r\n                                            }\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            {isAdding && (\r\n                                <FileInput\r\n                                    displayText=\"upload video\"\r\n                                    setFile={setVideoFile}\r\n                                    accept=\".mp4, .webm, .ogg, .ogv, .avi, .flv, .mov, .wmv, .mkv, .3gp, .3g2, .m4v, .mpg, .mpeg, .m2v, .m4v, .svi, .divx, .vob, .f4v, .asf, .qt, .m2ts, .mts, .ts, .mxf, .roq, .nsv, .flv, .f4v, .f4p, .f4a, .f4b, .f4r, .f4x, .3gp2, .3gpp, .3gp\"\r\n                                />\r\n                            )}\r\n                            <div className=\"dashboard-form__save\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    disabled={\r\n                                        !isValid ||\r\n                                        isSubmitting ||\r\n                                        (JSON.stringify({\r\n                                            ...values,\r\n                                            orderNb: parseInt(\r\n                                                values.orderNb.toString()\r\n                                            ),\r\n                                        }) === JSON.stringify(video) &&\r\n                                            (isAdding ? !videoFile : true)) ||\r\n                                        (isAdding ? !videoFile : false)\r\n                                    }\r\n                                >\r\n                                    {isAdding ? \"Add\" : \"Update\"}\r\n                                </button>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst checkoutSchema = yup.object().shape({\r\n    title: yup\r\n        .string()\r\n        .max(65, \"Title length must not exceed 65 characters\")\r\n        .required(\"Course Title cannot be empty\"),\r\n    description: yup.string().required(\"Required\"),\r\n    orderNb: yup\r\n        .number()\r\n        .typeError(\"Order number must be a number\")\r\n        .required(\"Required\"),\r\n});\r\n\r\nexport default EditVideo;\r\n","import \"./VideoDisplay.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Video } from \"../../../types/types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faYoutube } from \"@fortawesome/free-brands-svg-icons\";\r\nimport EditVideo from \"../editVideo/EditVideo\";\r\nimport ConfirmCard from \"../../confrimCard/ConfirmCard\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\n\r\ninterface VideoDisplayProps {\r\n    video: Video;\r\n    videos: Video[];\r\n    setRefresh: (state: any) => void;\r\n}\r\n\r\nfunction VideoDisplay({ video, videos, setRefresh }: VideoDisplayProps) {\r\n    const { title, description, durationInMinutes } = video;\r\n    const [isConfirm, setIsConfirm] = useState(false);\r\n    const [isDelete, setIsDelete] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const accessToken = useAccessToken();\r\n\r\n    useEffect(() => {\r\n        const deleteCourse = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + `/api/videos/${video.id}`,\r\n                    {\r\n                        method: \"DELETE\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if (response.ok) {\r\n                    setRefresh((prev: boolean) => !prev);\r\n                    setIsDelete(false);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        if (isDelete) deleteCourse();\r\n    }, [isDelete, accessToken, video.id, setRefresh]);\r\n\r\n    return (\r\n        <div className=\"video-display\">\r\n            {isEditing && (\r\n                <EditVideo\r\n                    video={video}\r\n                    setIsEditing={setIsEditing}\r\n                    setRefresh={setRefresh}\r\n                />\r\n            )}\r\n            {isConfirm && (\r\n                <ConfirmCard\r\n                    setIsConfirm={setIsConfirm}\r\n                    setIsDelete={setIsDelete}\r\n                    setRefresh={setRefresh}\r\n                />\r\n            )}\r\n            <div className=\"video-display__img\">\r\n                <FontAwesomeIcon icon={faYoutube} />\r\n            </div>\r\n            <div className=\"video-display__content\">\r\n                <div>\r\n                    <h1>{title}</h1>\r\n                    <p>{description}</p>\r\n                </div>\r\n                <div className=\"video-display__content__details\">\r\n                    <div className=\"video-display__content__details__duration\">\r\n                        Duration: {durationInMinutes} minutes\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"video-display__control\">\r\n                <span className=\"edit\" onClick={() => setIsEditing(true)}>\r\n                    <FontAwesomeIcon icon={faEdit} />\r\n                </span>\r\n                <span className=\"delete\" onClick={() => setIsConfirm(true)}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoDisplay;\r\n","import \"./Videos.scss\";\r\nimport { Link, useLocation, useParams } from \"react-router-dom\";\r\nimport Header from \"../../../components/dashboard/header/Header\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Video } from \"../../../types/types\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\nimport Loading from \"../../../components/loading/Loading\";\r\nimport ErrorCard from \"../../../components/error/ErrorCard\";\r\nimport VideoDisplay from \"../../../components/dashboard/videoDisplay/VideoDisplay\";\r\nimport EditVideo from \"../../../components/dashboard/editVideo/EditVideo\";\r\nimport { useTheme } from \"../../../contexts/ThemeContext\";\r\n\r\nfunction Videos() {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<string>(\"\");\r\n    const [videos, setVideos] = useState<Video[]>([]);\r\n    const [isAdding, setIsAdding] = useState<boolean>(false);\r\n    const [refresh, setRefresh] = useState<boolean>(false);\r\n    const [prevLocation, setPrevLocation] = useState<string>(\"\");\r\n    const { courseId } = useParams();\r\n    const { user } = useAuth();\r\n    const accessToken = useAccessToken();\r\n    const { theme } = useTheme();\r\n\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        let arr = location.pathname.split(\"/\");\r\n\r\n        while (arr[arr.length - 1] === \"\") arr.pop();\r\n        arr.pop();\r\n\r\n        setPrevLocation(arr.join(\"/\"));\r\n    }, [location.pathname]);\r\n\r\n    useEffect(() => {\r\n        const fetchVideos = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    `http://localhost:5050/api/videos/${courseId}/${\r\n                        user && user.role.toLowerCase() === \"instructor\"\r\n                            ? user.id\r\n                            : \"\"\r\n                    }`,\r\n                    {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                const data = await response.json();\r\n\r\n                if (response.status !== 200) throw Error(data.message);\r\n\r\n                setVideos(data);\r\n                setLoading(false);\r\n                if (data.length === 0) setError(\"No videos available\");\r\n            } catch (err) {\r\n                setLoading(false);\r\n                if (err instanceof Error) {\r\n                    setError(err.message);\r\n                } else {\r\n                    setError(\"Error fetching data from server\");\r\n                }\r\n            }\r\n        };\r\n\r\n        if (courseId) fetchVideos();\r\n        else setVideos([]);\r\n    }, [courseId, user, refresh, accessToken]);\r\n\r\n    return (\r\n        <div className=\"dashboard-course\">\r\n            <div className=\"dashboard-course__header\">\r\n                <Link to={prevLocation}>\r\n                    <div\r\n                        data-tooltip=\"Back\"\r\n                        className=\"dashboard-course__header__nav tooltip bottom\"\r\n                    >\r\n                        <FontAwesomeIcon icon={faArrowLeft} />\r\n                    </div>\r\n                </Link>\r\n\r\n                <div className=\"dashboard-course__header__details\">\r\n                    <Header\r\n                        title=\"Videos\"\r\n                        subtitle=\"In this page you can view and add videos to the selected course\"\r\n                    />\r\n                    {user?.role.toLowerCase() === \"instructor\" && (\r\n                        <div\r\n                            className=\"dashboard-course__add\"\r\n                            onClick={() => setIsAdding(true)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faPlus} />\r\n                            Add Video\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"dashboard-course__videos\">\r\n                {isAdding && (\r\n                    <EditVideo\r\n                        video={{\r\n                            id: \"\",\r\n                            orderNb: 0,\r\n                            courseId: courseId ?? \"\",\r\n                            durationInMinutes: 0,\r\n                            title: \"\",\r\n                            description: \"\",\r\n                            videoUrl: \"\",\r\n                        }}\r\n                        isAdding={isAdding}\r\n                        setIsEditing={setIsAdding}\r\n                        setRefresh={setRefresh}\r\n                    />\r\n                )}\r\n                {loading || error ? (\r\n                    <div className=\"dashboard-course__videos__status\">\r\n                        {loading ? (\r\n                            <Loading\r\n                                backgroundColor={\r\n                                    theme === \"dark\" ? \"#141b2d\" : \"\"\r\n                                }\r\n                                particlesBackgroundColor={\r\n                                    theme === \"dark\" ? \"#1f2a40\" : \"#f2f0f0\"\r\n                                }\r\n                            />\r\n                        ) : (\r\n                            <ErrorCard message={error} />\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    videos.map((video, idx) => {\r\n                        return (\r\n                            <VideoDisplay\r\n                                key={idx}\r\n                                video={video}\r\n                                videos={videos}\r\n                                setRefresh={setRefresh}\r\n                            />\r\n                        );\r\n                    })\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Videos;\r\n"],"names":["_ref","setIsConfirm","setIsDelete","wrapperRef","useRef","theme","useTheme","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsx","className","concat","children","_jsxs","ref","onClick","displayText","setFile","accept","messageRef","htmlFor","FontAwesomeIcon","icon","faArrowUpFromBracket","id","type","name","onChange","e","innerText","files","title","subtitle","style","marginBottom","color","fontSize","fontWeight","message","position","fill","onTop","faXmark","checkoutSchema","yup","shape","max","required","description","orderNb","typeError","video","setIsEditing","setRefresh","isAdding","videoFile","setVideoFile","useState","courseId","useParams","accessToken","useAccessToken","display","Formik","initialValues","onSubmit","values","async","formData","FormData","append","fetch","process","method","headers","body","ok","prev","error","console","log","addVideo","JSON","stringify","updateVideo","validationSchema","_ref2","isSubmitting","errors","isValid","handleBlur","handleChange","handleSubmit","Form","Field","onBlur","placeholder","disabled","FileInput","parseInt","toString","videos","durationInMinutes","isConfirm","isDelete","isEditing","deleteCourse","EditVideo","ConfirmCard","faYoutube","faEdit","faTrash","loading","setLoading","setError","setVideos","setIsAdding","refresh","prevLocation","setPrevLocation","user","useAuth","location","useLocation","arr","pathname","split","length","pop","join","response","role","toLowerCase","data","json","status","Error","err","fetchVideos","Link","to","faArrowLeft","Header","faPlus","videoUrl","Loading","backgroundColor","particlesBackgroundColor","ErrorCard","map","idx","VideoDisplay"],"sourceRoot":""}