{"version":3,"file":"static/js/336.35cea58a.chunk.js","mappings":"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","sources":["components/search/Search.tsx","components/loginpopup/Login.tsx","components/nav/Nav.tsx","components/textImage/TextImage.tsx"],"sourcesContent":["import \"./Search.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useCourse } from \"../../contexts/CourseContext\";\r\nimport { useTheme } from \"../../contexts/ThemeContext\";\r\nimport { useAccessToken } from \"../../contexts/AccessTokenContext\";\r\n\r\ninterface SuggestionsInterface {\r\n    id: string;\r\n    title: string;\r\n}\r\n\r\ninterface SearchProps {\r\n    className?: \"mobile\";\r\n}\r\n\r\nfunction Search({ className }: SearchProps) {\r\n    const { setCourseId } = useCourse();\r\n    const accessToken = useAccessToken();\r\n    const [word, setWord] = useState<string>(\"\");\r\n    const [suggestions, setSuggestions] = useState<SuggestionsInterface[]>([]);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n\r\n    // To show/hide the suggestion list on small screens\r\n    const [active, setActive] = useState<boolean>(false);\r\n    const { isSmallScreen } = useTheme();\r\n\r\n    const searchRef = useRef<HTMLDivElement>(null);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setWord(e.target.value);\r\n        if (word.length === 0) {\r\n            setSuggestions([]);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Fetching the suggestions from the server\r\n    useEffect(() => {\r\n        if (word) {\r\n            setLoading(true);\r\n        } else {\r\n            setLoading(false);\r\n            setSuggestions([]);\r\n        }\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL +\r\n                        `/api/search/courses/${word}`,\r\n                    {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if (response.status !== 200) {\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n\r\n                const data = await response.json();\r\n                setSuggestions(data);\r\n            } catch (error) {}\r\n            setLoading(false);\r\n        };\r\n\r\n        const timeoutId = setTimeout(() => {\r\n            if (word) fetchData();\r\n        }, 500);\r\n\r\n        return () => {\r\n            clearTimeout(timeoutId);\r\n        };\r\n    }, [accessToken, word]);\r\n\r\n    // To hide the suggestion list when clicked outside\r\n    useEffect(() => {\r\n        const handleClick = (e: MouseEvent) => {\r\n            if (\r\n                searchRef.current &&\r\n                !searchRef.current.contains(e.target as Node)\r\n            ) {\r\n                setSuggestions([]);\r\n                setWord(\"\");\r\n            }\r\n        };\r\n\r\n        document.addEventListener(\"click\", handleClick);\r\n\r\n        return () => {\r\n            document.removeEventListener(\"click\", handleClick);\r\n        };\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        setActive(!active);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={`search ${className} ${\r\n                isSmallScreen && (active ? \"show\" : \"hide\")\r\n            }`}\r\n            ref={searchRef}\r\n        >\r\n            <input\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                placeholder=\"Find Course...\"\r\n                name=\"navInput\"\r\n                autoComplete=\"off\"\r\n                value={word}\r\n            />\r\n            <div className=\"search__icon\" onClick={handleClick}>\r\n                <FontAwesomeIcon icon={faSearch} />\r\n            </div>\r\n            <ul className=\"suggestion-list\">\r\n                {loading ? (\r\n                    <li className=\"no-hover\">Searching...</li>\r\n                ) : suggestions.length > 0 ? (\r\n                    suggestions.map((suggestion) => (\r\n                        <Link\r\n                            to={`/course/${suggestion.id}`}\r\n                            onClick={() => setCourseId(suggestion.id)}\r\n                            key={suggestion.id}\r\n                        >\r\n                            <li>{suggestion.title}</li>\r\n                        </Link>\r\n                    ))\r\n                ) : (\r\n                    word.length > 0 && (\r\n                        <li className=\"no-hover\">No results found</li>\r\n                    )\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import \"./Login.scss\";\r\nimport {\r\n    Auth,\r\n    OAuthProvider,\r\n    signInWithPopup,\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\nimport { auth } from \"../../data/firebase\";\r\nimport googleLogo from \"../../assets/providers/google.png\";\r\nimport { FormEvent, useEffect, useState } from \"react\";\r\nimport Loading from \"../loading/Loading\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { FirebaseError } from \"firebase/app\";\r\n\r\ntype SupportedProviders = \"google\" | \"facebook\" | \"github\";\r\n\r\nconst providers: Record<SupportedProviders, OAuthProvider> = {\r\n    google: new OAuthProvider(\"google.com\"),\r\n    facebook: new OAuthProvider(\"facebook.com\"),\r\n    github: new OAuthProvider(\"github.com\"),\r\n};\r\n\r\ninterface LoginProps {\r\n    close: () => void;\r\n}\r\n\r\nfunction Login({ close }: LoginProps) {\r\n    const [signup, setSignup] = useState(false);\r\n\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string>(\"\");\r\n\r\n    const [counter, setCounter] = useState<number>(5);\r\n\r\n    const {\r\n        authContextLoading,\r\n        authContextError,\r\n        authContextSuccess,\r\n        authContextIsDone,\r\n        updateContext,\r\n    } = useAuth();\r\n\r\n    // To avoid the counter to get decremented when the component is rendered we keep track of isMount\r\n    const [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        const time = setTimeout(\r\n            () => updateContext({ authContextError: \"\" }),\r\n            15000\r\n        );\r\n\r\n        return () => clearTimeout(time);\r\n    }, [authContextError, updateContext]);\r\n\r\n    useEffect(() => {\r\n        const time = setTimeout(\r\n            () => updateContext({ authContextSuccess: \"\" }),\r\n            15000\r\n        );\r\n\r\n        return () => clearTimeout(time);\r\n    }, [authContextSuccess, updateContext]);\r\n\r\n    useEffect(() => {\r\n        setIsMounted(true);\r\n\r\n        let interval: NodeJS.Timer;\r\n\r\n        if (isMounted && authContextIsDone) {\r\n            interval = setInterval(() => {\r\n                setCounter((prevCounter) => prevCounter - 1);\r\n            }, 1000);\r\n        }\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [authContextIsDone, isMounted]);\r\n\r\n    useEffect(() => {\r\n        if (counter === 0) {\r\n            updateContext({ authContextIsDone: false });\r\n            close();\r\n        }\r\n    }, [counter, close, updateContext]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            updateContext({\r\n                authContextSuccess: \"\",\r\n                authContextError: \"\",\r\n                authContextLoading: false,\r\n                authContextIsDone: false,\r\n            });\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const handleSignInWithProvider = async (\r\n        auth: Auth,\r\n        providerName: SupportedProviders\r\n    ) => {\r\n        updateContext({\r\n            authContextLoading: true,\r\n        });\r\n        const provider = providers[providerName];\r\n        if (!provider) throw new Error(`Unsupported provider ${providerName}`);\r\n\r\n        signInWithPopup(auth, provider).catch((error) => {\r\n            if (error.code === \"auth/popup-closed-by-user\") {\r\n                updateContext({\r\n                    authContextError: \"Popup closed by user. Please try again.\",\r\n                });\r\n            } else if (error.code === \"auth/user-cancelled\") {\r\n                updateContext({\r\n                    authContextError: \"Operation Canceled. Please try again.\",\r\n                });\r\n            } else {\r\n                updateContext({\r\n                    authContextError: \"Uknown error. Please try again.\",\r\n                });\r\n            }\r\n\r\n            updateContext({ authContextLoading: false });\r\n        });\r\n    };\r\n\r\n    const handleLoginWithEmailPassword = async (\r\n        auth: Auth,\r\n        email: string,\r\n        password: string\r\n    ) => {\r\n        updateContext({\r\n            authContextLoading: true,\r\n        });\r\n\r\n        try {\r\n            if (email === \"\" || password === \"\")\r\n                throw new Error(\"Please fill in all fields.\");\r\n            console.log(\"email: \", email, \"password: \", password);\r\n            await signInWithEmailAndPassword(auth, email, password);\r\n        } catch (error: any) {\r\n            if (error instanceof FirebaseError) {\r\n                if (error.code === \"auth/invalid-credential\") {\r\n                    updateContext({\r\n                        authContextError:\r\n                            \"Invalid Email/Password. Please try again.\",\r\n                    });\r\n                } else if (error.code === \"auth/wrong-password\") {\r\n                    updateContext({\r\n                        authContextError: \"Wrong password. Please try again.\",\r\n                    });\r\n                } else {\r\n                    updateContext({\r\n                        authContextError: \"Uknown error. Please try again.\",\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        updateContext({ authContextLoading: false });\r\n    };\r\n\r\n    if (signup) {\r\n        return <SignupCard close={close} setSignup={setSignup} />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup\">\r\n            <div className=\"popup__wrapper\">\r\n                <h1>Login</h1>\r\n                {authContextError && (\r\n                    <p className=\"error\">{authContextError}</p>\r\n                )}\r\n                {authContextSuccess && (\r\n                    <p className=\"success\">\r\n                        {authContextSuccess +\r\n                            (authContextIsDone ? counter : null)}\r\n                    </p>\r\n                )}\r\n                <form\r\n                    onSubmit={(e: FormEvent) => {\r\n                        e.preventDefault();\r\n                        handleLoginWithEmailPassword(auth, email, password);\r\n                    }}\r\n                >\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        disabled={authContextLoading}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        disabled={authContextLoading}\r\n                        required\r\n                    />\r\n                    <div className=\"popup__wrapper__buttons\">\r\n                        <button type=\"submit\" disabled={authContextLoading}>\r\n                            {authContextLoading ? (\r\n                                <Loading\r\n                                    position=\"relative\"\r\n                                    size=\"small\"\r\n                                    minHeight={false}\r\n                                />\r\n                            ) : (\r\n                                \"Login\"\r\n                            )}\r\n                        </button>\r\n                        <span>\r\n                            New here?{\" \"}\r\n                            <span\r\n                                onClick={() => {\r\n                                    setSignup(true);\r\n                                }}\r\n                            >\r\n                                Sign up\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                </form>\r\n                <div className=\"separator\"></div>\r\n                <div className=\"popup__wrapper__providers\">\r\n                    <button\r\n                        onClick={() => handleSignInWithProvider(auth, \"google\")}\r\n                        disabled={authContextLoading || authContextIsDone}\r\n                    >\r\n                        <img src={googleLogo} alt=\"google\" />{\" \"}\r\n                        <div>\r\n                            {authContextLoading ? (\r\n                                <Loading\r\n                                    position=\"relative\"\r\n                                    size=\"small\"\r\n                                    minHeight={false}\r\n                                />\r\n                            ) : (\r\n                                \"Google\"\r\n                            )}\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n                <button\r\n                    onClick={() => close()}\r\n                    className=\"popup__close\"\r\n                    disabled={authContextLoading}\r\n                >\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface SignupCardProps extends LoginProps {\r\n    setSignup: (signup: boolean) => void;\r\n}\r\n\r\nconst SignupCard = ({ close, setSignup }: SignupCardProps) => {\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    const [fullName, setFullName] = useState<string>(\"\");\r\n\r\n    const [isMounted, setIsMounted] = useState<boolean>(false);\r\n    const [counter, setCounter] = useState<number>(5);\r\n\r\n    const {\r\n        authContextLoading,\r\n        authContextError,\r\n        authContextSuccess,\r\n        authContextIsDone,\r\n        setUserFullName,\r\n        updateContext,\r\n    } = useAuth();\r\n\r\n    useEffect(() => {\r\n        setIsMounted(true);\r\n\r\n        let interval: NodeJS.Timer;\r\n\r\n        if (isMounted && authContextIsDone) {\r\n            interval = setInterval(() => {\r\n                setCounter((prevCounter) => prevCounter - 1);\r\n            }, 1000);\r\n        }\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [authContextIsDone, isMounted]);\r\n\r\n    const createUser = async (\r\n        auth: Auth,\r\n        email: string,\r\n        password: string,\r\n        userFullName: string\r\n    ) => {\r\n        console.log(userFullName);\r\n        updateContext({\r\n            authContextLoading: true,\r\n        });\r\n        setUserFullName(userFullName);\r\n        console.log(\"End\");\r\n\r\n        try {\r\n            if (email === \"\" || password === \"\")\r\n                throw new Error(\"Please fill in all fields.\");\r\n            await createUserWithEmailAndPassword(auth, email, password);\r\n        } catch (error: any) {\r\n            if (error instanceof FirebaseError) {\r\n                if (error.code === \"auth/email-already-in-use\") {\r\n                    updateContext({\r\n                        authContextError:\r\n                            \"Email already in use. Please try again.\",\r\n                    });\r\n                } else {\r\n                    updateContext({\r\n                        authContextError: \"Unknown error. Please try again.\",\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        updateContext({ authContextLoading: false });\r\n    };\r\n\r\n    return (\r\n        <div className=\"popup\">\r\n            <div className=\"popup__wrapper\">\r\n                <h1>Create New Account</h1>\r\n                {authContextError && (\r\n                    <p className=\"error\">{authContextError}</p>\r\n                )}\r\n                {authContextSuccess && (\r\n                    <p className=\"success\">\r\n                        {authContextSuccess +\r\n                            (authContextIsDone ? counter : null)}\r\n                    </p>\r\n                )}\r\n                <form\r\n                    onSubmit={(e: FormEvent) => {\r\n                        e.preventDefault();\r\n                        createUser(auth, email, password, fullName);\r\n                    }}\r\n                >\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Full Name\"\r\n                        value={fullName}\r\n                        onChange={(e) => setFullName(e.target.value)}\r\n                        disabled={authContextLoading}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        disabled={authContextLoading}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        disabled={authContextLoading}\r\n                        required\r\n                    />\r\n                    <div className=\"popup__wrapper__buttons\">\r\n                        <button type=\"submit\" disabled={authContextLoading}>\r\n                            {authContextLoading ? (\r\n                                <Loading\r\n                                    position=\"relative\"\r\n                                    size=\"small\"\r\n                                    minHeight={false}\r\n                                />\r\n                            ) : (\r\n                                \"Sign up\"\r\n                            )}\r\n                        </button>\r\n                        <span>\r\n                            Have Account?{\" \"}\r\n                            <span onClick={() => setSignup(false)}>Login</span>\r\n                        </span>\r\n                    </div>\r\n                </form>\r\n                <button\r\n                    onClick={() => close()}\r\n                    className=\"popup__close\"\r\n                    disabled={authContextLoading}\r\n                >\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import \"./Nav.scss\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport darkLogo from \"../../assets/logo/DarkThemeLogoLandscape-nobg.png\";\r\nimport lightLogo from \"../../assets/logo/LightThemeLogoLandscape-nobg.png\";\r\nimport { auth } from \"../../data/firebase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faSun,\r\n    faMoon,\r\n    faStar,\r\n    faUpRightFromSquare,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Search from \"../search/Search\";\r\nimport Login from \"../loginpopup/Login\";\r\nimport { useTheme } from \"../../contexts/ThemeContext\";\r\nimport { useAccessToken } from \"../../contexts/AccessTokenContext\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport TextImage from \"../textImage/TextImage\";\r\n\r\nfunction Nav() {\r\n    const [active, setActive] = useState<boolean>(false);\r\n    const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n    const { user } = useAuth();\r\n    const { theme, isSmallScreen, toggleTheme } = useTheme();\r\n    const accessToken = useAccessToken();\r\n\r\n    const handleClose = () => {\r\n        setShowPopup(false);\r\n    };\r\n\r\n    const handleSignOut = () => {\r\n        auth.signOut();\r\n    };\r\n\r\n    const handleSubscribeClick = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.REACT_APP_API_URL}/api/subscribe`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"x-access-token\": accessToken,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: user?.uid,\r\n                    }),\r\n                }\r\n            );\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.status !== 200) throw Error(data.message);\r\n\r\n            window.location.href = data.url;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"aca-nav\">\r\n                {isSmallScreen && <Search className=\"mobile\" />}\r\n                <div className=\"container\">\r\n                    <div className=\"aca-nav__logo\">\r\n                        <a href=\"/bineast-academy\">\r\n                            <img\r\n                                src={theme === \"dark\" ? darkLogo : lightLogo}\r\n                                alt=\"bineast\"\r\n                            />\r\n                        </a>\r\n                    </div>\r\n                    <Search />\r\n                    <div className=\"aca-nav__control\">\r\n                        {user &&\r\n                            (user.role.toLowerCase() === \"admin\" ||\r\n                                user.role.toLowerCase() === \"instructor\") && (\r\n                                <NavLink\r\n                                    data-tooltip=\"Go to Dashboard\"\r\n                                    to=\"/dashboard\"\r\n                                    className=\"aca-nav__control__dashboard tooltip bottom\"\r\n                                >\r\n                                    <FontAwesomeIcon\r\n                                        icon={faUpRightFromSquare}\r\n                                    />\r\n                                </NavLink>\r\n                            )}\r\n                        {user && !user.isPremium ? (\r\n                            <div\r\n                                className=\"aca-nav__control__subscription tooltip bottom\"\r\n                                onClick={handleSubscribeClick}\r\n                                data-tooltip=\"Become premium member\"\r\n                            >\r\n                                <FontAwesomeIcon icon={faStar} />\r\n                            </div>\r\n                        ) : null}\r\n                        <FontAwesomeIcon\r\n                            className=\"aca-nav__control__theme\"\r\n                            icon={theme === \"light\" ? faMoon : faSun}\r\n                            onClick={toggleTheme}\r\n                        />\r\n                        {user ? (\r\n                            <>\r\n                                <div\r\n                                    onClick={() => setActive(!active)}\r\n                                    className=\"aca-nav__control__profile\"\r\n                                >\r\n                                    {user.photoURL === undefined ? (\r\n                                        <img src={user.photoURL} alt=\"user\" />\r\n                                    ) : (\r\n                                        <TextImage\r\n                                            text={\r\n                                                user && user.displayName\r\n                                                    ? user.displayName\r\n                                                    : \"Uknown User\"\r\n                                            }\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                                <div\r\n                                    className={`aca-nav__control__signout ${\r\n                                        active ? \"active\" : null\r\n                                    }`}\r\n                                >\r\n                                    <span onClick={handleSignOut}>\r\n                                        Sign Out\r\n                                    </span>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <span\r\n                                onClick={() => setShowPopup(!showPopup)}\r\n                                className=\"aca-nav__control__login\"\r\n                            >\r\n                                <span>Login</span>\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {showPopup && <Login close={handleClose} />}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import \"./TextImage.scss\";\r\n\r\n// Function to generate random color\r\nfunction randomColor(): string {\r\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n}\r\n\r\ninterface TextImageProps {\r\n    text: string;\r\n}\r\n\r\nfunction TextImage({ text }: TextImageProps) {\r\n    const textArray = text.split(\" \");\r\n    const textToDisplay =\r\n        textArray.length < 2\r\n            ? `${textArray[0][0]}`\r\n            : `${textArray[0][0] + textArray[1][0]}`;\r\n\r\n    const color = randomColor();\r\n\r\n    return (\r\n        <div\r\n            className=\"generated-image__wrapper\"\r\n            style={{\r\n                backgroundColor: color ? color : \"#00ff55\",\r\n            }}\r\n        >\r\n            {textToDisplay}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextImage;\r\n"],"names":["_ref","className","setCourseId","useCourse","accessToken","useAccessToken","word","setWord","useState","suggestions","setSuggestions","loading","setLoading","active","setActive","isSmallScreen","useTheme","searchRef","useRef","useEffect","timeoutId","setTimeout","async","response","fetch","process","concat","method","headers","status","data","json","error","fetchData","clearTimeout","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","_jsxs","ref","children","_jsx","onChange","value","length","type","placeholder","name","autoComplete","onClick","FontAwesomeIcon","icon","faSearch","map","suggestion","Link","to","id","title","providers","google","OAuthProvider","facebook","github","SignupCard","_ref2","close","setSignup","email","setEmail","password","setPassword","fullName","setFullName","isMounted","setIsMounted","counter","setCounter","authContextLoading","authContextError","authContextSuccess","authContextIsDone","setUserFullName","updateContext","useAuth","interval","setInterval","prevCounter","clearInterval","onSubmit","preventDefault","auth","userFullName","console","log","Error","createUserWithEmailAndPassword","FirebaseError","code","createUser","disabled","required","Loading","position","size","minHeight","signup","time","signInWithEmailAndPassword","handleLoginWithEmailPassword","providerName","provider","signInWithPopup","catch","handleSignInWithProvider","src","googleLogo","alt","showPopup","setShowPopup","user","theme","toggleTheme","_Fragment","Search","href","darkLogo","lightLogo","role","toLowerCase","NavLink","faUpRightFromSquare","isPremium","body","JSON","stringify","userId","uid","message","window","location","url","faStar","faMoon","faSun","undefined","photoURL","TextImage","text","displayName","handleSignOut","signOut","Login","handleClose","textArray","split","textToDisplay","color","Math","floor","random","toString","style","backgroundColor"],"sourceRoot":""}