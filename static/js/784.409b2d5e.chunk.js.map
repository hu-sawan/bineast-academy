{"version":3,"file":"static/js/784.409b2d5e.chunk.js","mappings":"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","sources":["components/dashboard/fileInput/FileInput.tsx","components/dashboard/header/Header.tsx","components/error/ErrorCard.tsx","components/dashboard/editCourse/EditCourse.tsx","components/dashboard/courseDisplay/CourseDisplay.tsx","pages/dashboard/courses/Courses.tsx"],"sourcesContent":["import { faArrowUpFromBracket } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useRef } from \"react\";\r\n\r\ninterface FileInputProps {\r\n    displayText: string;\r\n    accept?: string;\r\n    setFile: (file: File) => void;\r\n}\r\n\r\nfunction FileInput({ displayText, setFile, accept }: FileInputProps) {\r\n    const messageRef = useRef<HTMLDivElement>(null);\r\n    return (\r\n        <div className=\"input-wrapper contain-file\">\r\n            <label htmlFor=\"file-input\">\r\n                <FontAwesomeIcon icon={faArrowUpFromBracket} />\r\n                <span>{displayText}</span>\r\n            </label>\r\n            <input\r\n                className=\"file-input\"\r\n                id=\"file-input\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                accept={accept}\r\n                onChange={(e) => {\r\n                    messageRef.current!.innerText = e.target.files![0].name;\r\n                    setFile(e.target.files![0]);\r\n                }}\r\n            />\r\n            <div ref={messageRef} className=\"message\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileInput;\r\n","interface HeaderProps {\r\n    title: string;\r\n    subtitle: string;\r\n}\r\n\r\nconst Header = ({ title, subtitle }: HeaderProps) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                marginBottom: \"15px\",\r\n            }}\r\n        >\r\n            <h2\r\n                style={{\r\n                    color: \"var(--primary-text-color)\",\r\n                    fontSize: \"32px\",\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: \"5px\",\r\n                }}\r\n            >\r\n                {title}\r\n            </h2>\r\n            <h5\r\n                style={{\r\n                    color: \"var(--light-green-text-color)\",\r\n                    fontWeight: \"400\",\r\n                    fontSize: \"16px\",\r\n                }}\r\n            >\r\n                {subtitle}\r\n            </h5>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import \"./ErrorCard.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface ErrorCardProps {\r\n    message: string;\r\n    fill?: boolean;\r\n    onTop?: boolean;\r\n    position?: \"relative\" | \"absolute\";\r\n}\r\n\r\nfunction ErrorCard({\r\n    message,\r\n    position = \"absolute\",\r\n    fill = false,\r\n    onTop = false,\r\n}: ErrorCardProps) {\r\n    return (\r\n        <div className={`error-card ${fill && \"fill\"} ${onTop && \"on-top\"}`}>\r\n            <div className=\"error-card__wrapper\">\r\n                <div className=\"icon\">\r\n                    <FontAwesomeIcon icon={faXmark} />\r\n                </div>\r\n                {message}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorCard;\r\n","import \"./EditCourse.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTheme } from \"../../../contexts/ThemeContext\";\r\nimport { Course } from \"../../../types/types\";\r\nimport { Form, Field, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\nimport FileInput from \"../fileInput/FileInput\";\r\nimport { useState } from \"react\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\n\r\ninterface FormCourse extends Course {\r\n    price: \"free\" | \"premium\";\r\n}\r\ninterface EditCourseProps {\r\n    course: Course;\r\n    isAdding?: boolean;\r\n    setIsEditing: (state: boolean) => void;\r\n    setRefresh: (state: any) => void;\r\n}\r\n\r\nfunction EditCourse({\r\n    course,\r\n    setIsEditing,\r\n    setRefresh,\r\n    isAdding = false,\r\n}: EditCourseProps) {\r\n    const [thumbnail, setThumbnail] = useState<File | null>(null);\r\n    const { theme } = useTheme();\r\n    const accessToken = useAccessToken();\r\n    const { user } = useAuth();\r\n\r\n    const formCourse: FormCourse = {\r\n        ...course,\r\n        level: course.level.toLowerCase() as\r\n            | \"beginner\"\r\n            | \"intermediate\"\r\n            | \"advanced\",\r\n        price: course.isPremium ? \"premium\" : \"free\",\r\n    };\r\n\r\n    const handleFormSubmit = (values: FormCourse) => {\r\n        const formData = new FormData();\r\n\r\n        formData.append(\"title\", values.title);\r\n        formData.append(\"description\", values.description);\r\n        formData.append(\"level\", values.level);\r\n        formData.append(\"visibility\", values.visibility!);\r\n        formData.append(\"userId\", user?.id ?? \"\");\r\n        formData.append(\r\n            \"isPremium\",\r\n            values.price === \"premium\" ? \"true\" : \"false\"\r\n        );\r\n        formData.append(\"thumbnail\", thumbnail ?? \"\");\r\n        formData.append(\"tags\", values.tags ?? \"\");\r\n\r\n        if (isAdding) {\r\n            return new Promise<void>((resolve, reject) => {\r\n                fetch(process.env.REACT_APP_API_URL + \"/api/courses/add\", {\r\n                    method: \"POST\",\r\n                    headers: { \"x-access-token\": accessToken },\r\n                    body: formData,\r\n                })\r\n                    .then((response) => {\r\n                        if (response.ok) {\r\n                            setIsEditing(false);\r\n                            resolve();\r\n                            setTimeout(() => {\r\n                                setRefresh((prev: boolean) => !prev);\r\n                            }, 1000);\r\n                        } else {\r\n                            reject(new Error(response.statusText));\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        if (error instanceof Error) {\r\n                            console.log(error.message);\r\n                            reject(error.message);\r\n                        }\r\n                        reject(\"Something wrong happened while editing course\");\r\n                    });\r\n            });\r\n        } else {\r\n            return new Promise<void>((resolve, reject) => {\r\n                fetch(\r\n                    process.env.REACT_APP_API_URL + \"/api/courses/\" + course.id,\r\n                    {\r\n                        method: \"PATCH\",\r\n                        headers: { \"x-access-token\": accessToken },\r\n                        body: formData,\r\n                    }\r\n                )\r\n                    .then((response) => {\r\n                        if (response.ok) {\r\n                            setIsEditing(false);\r\n                            resolve();\r\n                            setTimeout(() => {\r\n                                setRefresh((prev: boolean) => !prev);\r\n                            }, 1000);\r\n                        } else {\r\n                            reject(new Error(response.statusText));\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        if (error instanceof Error) {\r\n                            reject(error.message);\r\n                        }\r\n                        reject(\"Something wrong happened while editing course\");\r\n                    });\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`edit-course ${theme}`}>\r\n            <div className=\"edit-course__wrapper\">\r\n                <span\r\n                    data-tooltip=\"Cancel\"\r\n                    className=\"tooltip bottom cancel\"\r\n                    onClick={() => setIsEditing(false)}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        style={{ display: \"block\" }}\r\n                        icon={faXmark}\r\n                    />\r\n                </span>\r\n                <Formik\r\n                    initialValues={formCourse}\r\n                    onSubmit={handleFormSubmit}\r\n                    validationSchema={checkoutSchema}\r\n                >\r\n                    {({\r\n                        isSubmitting,\r\n                        values,\r\n                        errors,\r\n                        isValid,\r\n                        handleBlur,\r\n                        handleChange,\r\n                        handleSubmit,\r\n                    }) => (\r\n                        <Form\r\n                            className=\"dashboard-form\"\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n                            <div\r\n                                data-error={errors.title ? errors.title : \"\"}\r\n                                className={`input-wrapper ${\r\n                                    errors.title ? \"error\" : \"\"\r\n                                }`}\r\n                            >\r\n                                <label htmlFor=\"title\">Course Title:</label>\r\n                                <Field\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={errors.title ? \"error\" : \"\"}\r\n                                    name=\"title\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Course Title\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                className={`input-wrapper ${\r\n                                    errors.description ? \"error\" : \"\"\r\n                                }`}\r\n                                data-error={\r\n                                    errors.description ? errors.description : \"\"\r\n                                }\r\n                            >\r\n                                <label htmlFor=\"description\">\r\n                                    Course Description:\r\n                                </label>\r\n                                <Field\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={\r\n                                        errors.description ? \"error\" : \"\"\r\n                                    }\r\n                                    name=\"description\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Course Description\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-wrapper\">\r\n                                <label htmlFor=\"tags\">\r\n                                    Tags:{\" \"}\r\n                                    <span className=\"addition\">\r\n                                        (separated by ' , ')\r\n                                    </span>\r\n                                </label>\r\n                                <Field\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    name=\"tags\"\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"three-inputs\">\r\n                                <div className=\"input-wrapper\">\r\n                                    <label htmlFor=\"level\">Level:</label>\r\n                                    <Field name=\"level\" as=\"select\">\r\n                                        <option value=\"beginner\">\r\n                                            Beginner\r\n                                        </option>\r\n                                        <option value=\"advanced\">\r\n                                            Advanced\r\n                                        </option>\r\n                                        <option value=\"intermediate\">\r\n                                            Intermediate\r\n                                        </option>\r\n                                    </Field>\r\n                                </div>\r\n                                <div className=\"input-wrapper\">\r\n                                    <label htmlFor=\"price\">Price</label>\r\n                                    <Field name=\"price\" as=\"select\">\r\n                                        <option value=\"free\">Free</option>\r\n                                        <option value=\"premium\">Premium</option>\r\n                                    </Field>\r\n                                </div>\r\n                                <div className=\"input-wrapper\">\r\n                                    <label htmlFor=\"visibility\">\r\n                                        Visibility:\r\n                                    </label>\r\n                                    <Field name=\"visibility\" as=\"select\">\r\n                                        <option value=\"public\">Public</option>\r\n                                        <option value=\"private\">Private</option>\r\n                                    </Field>\r\n                                </div>\r\n                                <div className=\"input-wrapper\">\r\n                                    <label htmlFor=\"durationInMinutes\">\r\n                                        Duration In Minutes:\r\n                                    </label>\r\n                                    <Field\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        name=\"durationInMinutes\"\r\n                                        type=\"text\"\r\n                                        disabled\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <FileInput\r\n                                displayText=\"choose new thumbnail\"\r\n                                setFile={setThumbnail}\r\n                                accept=\".png, .jpeg, .jpg\"\r\n                            />\r\n                            <div className=\"dashboard-form__save\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    disabled={\r\n                                        !isValid ||\r\n                                        isSubmitting ||\r\n                                        // ! Check again\r\n                                        (JSON.stringify({\r\n                                            ...course,\r\n                                            price: course.isPremium\r\n                                                ? \"premium\"\r\n                                                : \"free\",\r\n                                        }) ===\r\n                                            JSON.stringify({\r\n                                                ...values,\r\n                                                price: values.price.toLowerCase() as\r\n                                                    | \"free\"\r\n                                                    | \"premium\",\r\n                                            }) &&\r\n                                            !thumbnail)\r\n                                    }\r\n                                >\r\n                                    {isAdding ? \"Add\" : \"Update\"}\r\n                                </button>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst checkoutSchema = yup.object().shape({\r\n    title: yup\r\n        .string()\r\n        .max(65, \"Title length must not exceed 65 characters\")\r\n        .required(\"Course Title cannot be empty\"),\r\n    description: yup.string().required(\"Required\"),\r\n});\r\n\r\nexport default EditCourse;\r\n","import \"./CourseDisplay.scss\";\r\nimport { Course } from \"../../../types/types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faEdit,\r\n    faTrash,\r\n    faEye,\r\n    faEyeSlash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { lazy, useEffect, useState } from \"react\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\nimport EditCourse from \"../editCourse/EditCourse\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst ConfirmCard = lazy(() => import(\"../../confrimCard/ConfirmCard\"));\r\n\r\ninterface CourseDisplayProps {\r\n    course: Course;\r\n    setRefresh: (state: any) => void;\r\n}\r\n\r\nfunction CourseDisplay({ course, setRefresh }: CourseDisplayProps) {\r\n    const [isConfirm, setIsConfirm] = useState(false);\r\n    const [isDelete, setIsDelete] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const location = useLocation();\r\n\r\n    const currPath = location.pathname;\r\n\r\n    const {\r\n        id,\r\n        imgUrl,\r\n        title,\r\n        description,\r\n        durationInMinutes,\r\n        level,\r\n        isPremium,\r\n        visibility,\r\n    } = course;\r\n\r\n    const accessToken = useAccessToken();\r\n\r\n    useEffect(() => {\r\n        const deleteCourse = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + `/api/courses/${id}`,\r\n                    {\r\n                        method: \"DELETE\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if (response.ok) {\r\n                    setRefresh((prev: boolean) => !prev);\r\n                    setIsDelete(false);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        if (isDelete) deleteCourse();\r\n    }, [isDelete, accessToken, id, setRefresh]);\r\n\r\n    return (\r\n        <div className=\"course-display\">\r\n            {isConfirm && (\r\n                <ConfirmCard\r\n                    setIsConfirm={setIsConfirm}\r\n                    setIsDelete={setIsDelete}\r\n                    setRefresh={setRefresh}\r\n                />\r\n            )}\r\n            {isEditing && (\r\n                <EditCourse\r\n                    course={course}\r\n                    setIsEditing={setIsEditing}\r\n                    setRefresh={setRefresh}\r\n                />\r\n            )}\r\n            <Link\r\n                to={`${currPath}/${course.id}`}\r\n                className=\"course-display__link\"\r\n            >\r\n                <div className=\"course-display__img\">\r\n                    <img src={imgUrl} alt={title} />\r\n                </div>\r\n                <div className=\"course-display__content\">\r\n                    <div className=\"video-display__content__title\">\r\n                        <div>\r\n                            <h1>{title}</h1>\r\n                            <p>{description}</p>\r\n                        </div>\r\n                        <div\r\n                            data-tooltip={`${visibility}`}\r\n                            className=\"visibility tooltip bottom\"\r\n                        >\r\n                            {visibility?.toLowerCase() === \"public\" ? (\r\n                                <FontAwesomeIcon icon={faEye} />\r\n                            ) : (\r\n                                <FontAwesomeIcon icon={faEyeSlash} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"course-display__content__details\">\r\n                        <div className=\"course-display__content__details__duration\">\r\n                            Duration: {durationInMinutes} minutes\r\n                        </div>\r\n                        <div className=\"course-display__content__details__level\">\r\n                            Level: {level}\r\n                        </div>\r\n                        <div className=\"course-display__content__details__is-premium\">\r\n                            {isPremium ? \"Premium\" : \"Free\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <div className=\"course-display__control\">\r\n                <span className=\"edit\" onClick={() => setIsEditing(true)}>\r\n                    <FontAwesomeIcon icon={faEdit} />\r\n                </span>\r\n                <span className=\"delete\" onClick={() => setIsConfirm(true)}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseDisplay;\r\n","import \"./Courses.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Header from \"../../../components/dashboard/header/Header\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\nimport { Course } from \"../../../types/types\";\r\nimport Loading from \"../../../components/loading/Loading\";\r\nimport CourseDisplay from \"../../../components/dashboard/courseDisplay/CourseDisplay\";\r\nimport ErrorCard from \"../../../components/error/ErrorCard\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\nimport EditCourse from \"../../../components/dashboard/editCourse/EditCourse\";\r\nimport { useTheme } from \"../../../contexts/ThemeContext\";\r\n\r\nfunction Courses() {\r\n    const [courses, setCourses] = useState<Course[]>([]);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<string>(\"\");\r\n    const [refresh, setRefresh] = useState<boolean>(false);\r\n    const [isAdding, setIsAdding] = useState<boolean>(false);\r\n\r\n    const { user } = useAuth();\r\n\r\n    const accessToken = useAccessToken();\r\n    const { theme } = useTheme();\r\n\r\n    useEffect(() => {\r\n        const getCourses = async () => {\r\n            const ENDPOINT =\r\n                user?.role.toLowerCase() === \"admin\"\r\n                    ? \"/api/courses/admin\"\r\n                    : `/api/courses/instructor/${user?.id}`;\r\n            try {\r\n                setError(\"\");\r\n                setLoading(true);\r\n                const response = await fetch(\r\n                    process.env.REACT_APP_API_URL + ENDPOINT,\r\n                    {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"x-access-token\": accessToken,\r\n                        },\r\n                    }\r\n                );\r\n                const data = await response.json();\r\n\r\n                if (response.status !== 200) throw new Error(data.message);\r\n\r\n                setCourses(data);\r\n                setLoading(false);\r\n                if (data.length === 0) setError(\"No courses available\");\r\n            } catch (err) {\r\n                setLoading(false);\r\n                if (err instanceof Error) {\r\n                    setError(err.message);\r\n                } else {\r\n                    setError(\"Error fetching data from server\");\r\n                }\r\n            }\r\n        };\r\n        getCourses();\r\n    }, [refresh, accessToken, user?.role, user?.id]);\r\n\r\n    return (\r\n        <div className=\"dashboard-courses\">\r\n            <div className=\"dashboard-courses__header\">\r\n                <Header\r\n                    title=\"Courses\"\r\n                    subtitle=\"In this page you can manage courses\"\r\n                />\r\n                {user?.role.toLowerCase() === \"instructor\" && (\r\n                    <div\r\n                        className=\"dashboard-courses__add\"\r\n                        onClick={() => setIsAdding(true)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                        Add Course\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"courses\">\r\n                {isAdding && (\r\n                    <EditCourse\r\n                        setIsEditing={setIsAdding}\r\n                        course={{\r\n                            title: \"\",\r\n                            description: \"\",\r\n                            id: \"\",\r\n                            durationInMinutes: 0,\r\n                            isPremium: false,\r\n                            imgUrl: \"\",\r\n                            level: \"beginner\",\r\n                            visibility: \"public\",\r\n                            tags: \"\",\r\n                        }}\r\n                        setRefresh={setRefresh}\r\n                        isAdding={true}\r\n                    />\r\n                )}\r\n                {loading || error ? (\r\n                    <div className=\"dashboard-courses__status\">\r\n                        {loading ? (\r\n                            <Loading\r\n                                backgroundColor={\r\n                                    theme === \"dark\" ? \"#141b2d\" : \"\"\r\n                                }\r\n                                particlesBackgroundColor={\r\n                                    theme === \"dark\" ? \"#1f2a40\" : \"#f2f0f0\"\r\n                                }\r\n                            />\r\n                        ) : (\r\n                            <ErrorCard message={error} />\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    courses.map((course) => (\r\n                        <CourseDisplay\r\n                            key={course.id}\r\n                            setRefresh={setRefresh}\r\n                            course={course}\r\n                        />\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Courses;\r\n"],"names":["_ref","displayText","setFile","accept","messageRef","useRef","_jsxs","className","children","htmlFor","_jsx","FontAwesomeIcon","icon","faArrowUpFromBracket","id","type","name","onChange","e","current","innerText","target","files","ref","title","subtitle","style","marginBottom","color","fontSize","fontWeight","message","position","fill","onTop","concat","faXmark","checkoutSchema","yup","shape","max","required","description","course","setIsEditing","setRefresh","isAdding","thumbnail","setThumbnail","useState","theme","useTheme","accessToken","useAccessToken","user","useAuth","formCourse","level","toLowerCase","price","isPremium","onClick","display","Formik","initialValues","onSubmit","values","_user$id","_values$tags","formData","FormData","append","visibility","tags","Promise","resolve","reject","fetch","process","method","headers","body","then","response","ok","setTimeout","prev","Error","statusText","catch","error","console","log","validationSchema","_ref2","isSubmitting","errors","isValid","handleBlur","handleChange","handleSubmit","Form","Field","onBlur","placeholder","as","value","disabled","FileInput","JSON","stringify","ConfirmCard","lazy","isConfirm","setIsConfirm","isDelete","setIsDelete","isEditing","currPath","useLocation","pathname","imgUrl","durationInMinutes","useEffect","async","deleteCourse","EditCourse","Link","to","src","alt","faEye","faEyeSlash","faEdit","faTrash","courses","setCourses","loading","setLoading","setError","refresh","setIsAdding","ENDPOINT","role","data","json","status","length","err","getCourses","Header","faPlus","Loading","backgroundColor","particlesBackgroundColor","ErrorCard","map","CourseDisplay"],"sourceRoot":""}