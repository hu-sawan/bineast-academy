{"version":3,"file":"static/js/804.ae20c7f7.chunk.js","mappings":"uNAmJA,MAAMA,EAAiBC,EAAAA,KAAaC,MAAM,CACtCC,MAAOF,EAAAA,KAEFG,IAAI,GAAI,8CACRC,SAAS,gCACdC,YAAaL,EAAAA,KAAaI,SAAS,cAGvC,EA5IA,SAAmBE,GAAyD,IAAxD,OAAEC,EAAM,aAAEC,EAAY,WAAEC,GAA6BH,EACrE,MAAM,MAAEI,IAAUC,EAAAA,EAAAA,KACZC,GAAcC,EAAAA,EAAAA,KA4BpB,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,eAAAC,OAAiBN,GAAQO,UACnCC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,uBAAsBE,SAAA,EACjCH,EAAAA,EAAAA,KAAA,QACI,eAAa,SACbC,UAAU,wBACVI,QAASA,IAAMX,GAAa,GAAOS,UAEnCH,EAAAA,EAAAA,KAACM,EAAAA,EAAe,CACZC,MAAO,CAAEC,QAAS,SAClBC,KAAMC,EAAAA,SAGdV,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CACHC,cAAenB,EACfoB,SAzCUC,GACf,IAAIC,SAAc,CAACC,EAASC,KAC/BC,MAAMC,qCAAkD1B,EAAO2B,GAAI,CAC/DC,OAAQ,QACRC,QAAS,CACL,eAAgB,mBAChB,iBAAkBxB,GAEtByB,KAAMC,KAAKC,UAAUX,KAEpBY,MAAMC,IACCA,EAASC,IACTC,QAAQC,IAAI,kBACZd,IACAtB,GAAa,GACbC,GAAYoC,IAAmBA,KAE/Bd,EAAO,IAAIe,MAAM,2BACrB,IAEHC,OAAOC,IACJjB,EAAOiB,EAAM,GACf,IAoBEC,iBAAkBlD,EAAekB,SAEhCiC,IAAA,IAAC,aACEC,EAAY,OACZvB,EAAM,OACNwB,EAAM,QACNC,EAAO,WACPC,EAAU,aACVC,EAAY,aACZC,GACHN,EAAA,OACGhC,EAAAA,EAAAA,MAACuC,EAAAA,GAAI,CACD1C,UAAU,iBACVY,SAAU6B,EAAavC,SAAA,EAEvBC,EAAAA,EAAAA,MAAA,OACI,aAAYkC,EAAOlD,MAAQkD,EAAOlD,MAAQ,GAC1Ca,UAAS,iBAAAC,OACLoC,EAAOlD,MAAQ,QAAU,IAC1Be,SAAA,EAEHH,EAAAA,EAAAA,KAAA,SAAO4C,QAAQ,QAAOzC,SAAC,mBACvBH,EAAAA,EAAAA,KAAC6C,EAAAA,GAAK,CACFC,SAAUL,EACVM,OAAQP,EACRvC,UAAWqC,EAAOlD,MAAQ,QAAU,GACpC4D,KAAK,QACLC,KAAK,OACLC,YAAY,qBAGpB9C,EAAAA,EAAAA,MAAA,OACIH,UAAS,iBAAAC,OACLoC,EAAO/C,YAAc,QAAU,IAEnC,aACI+C,EAAO/C,YAAc+C,EAAO/C,YAAc,GAC7CY,SAAA,EAEDH,EAAAA,EAAAA,KAAA,SAAO4C,QAAQ,cAAazC,SAAC,yBAG7BH,EAAAA,EAAAA,KAAC6C,EAAAA,GAAK,CACFC,SAAUL,EACVM,OAAQP,EACRvC,UACIqC,EAAO/C,YAAc,QAAU,GAEnCyD,KAAK,cACLC,KAAK,OACLC,YAAY,2BAGpB9C,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeE,SAAA,EAC1BH,EAAAA,EAAAA,KAAA,SAAO4C,QAAQ,oBAAmBzC,SAAC,0BAGnCH,EAAAA,EAAAA,KAAC6C,EAAAA,GAAK,CACFC,SAAUL,EACVM,OAAQP,EACRQ,KAAK,oBACLC,KAAK,OACLE,UAAQ,QAGhBnD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BE,UACvCH,EAAAA,EAAAA,KAAA,UACIiD,KAAK,SACLE,UACKZ,GACDF,GACAb,KAAKC,UAAUhC,KACX+B,KAAKC,UAAUX,GACtBX,SACJ,eAIF,QAM/B,C","sources":["components/dashboard/editCourse/EditCourse.tsx"],"sourcesContent":["import \"./EditCourse.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTheme } from \"../../../contexts/ThemeContext\";\r\nimport { Course } from \"../../../types/types\";\r\nimport { Form, Field, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useAccessToken } from \"../../../contexts/AccessTokenContext\";\r\n\r\ninterface EditCourseProps {\r\n    course: Course;\r\n    setIsEditing: (state: boolean) => void;\r\n    setRefresh: (state: any) => void;\r\n}\r\n\r\nfunction EditCourse({ course, setIsEditing, setRefresh }: EditCourseProps) {\r\n    const { theme } = useTheme();\r\n    const accessToken = useAccessToken();\r\n\r\n    const handleFormSubmit = (values: Course) => {\r\n        return new Promise<void>((resolve, reject) => {\r\n            fetch(process.env.REACT_APP_API_URL + \"/api/courses/\" + course.id, {\r\n                method: \"PATCH\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"x-access-token\": accessToken,\r\n                },\r\n                body: JSON.stringify(values),\r\n            })\r\n                .then((response) => {\r\n                    if (response.ok) {\r\n                        console.log(\"Course updated\");\r\n                        resolve();\r\n                        setIsEditing(false);\r\n                        setRefresh((prev: boolean) => !prev);\r\n                    } else {\r\n                        reject(new Error(\"Failed to create course\"));\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className={`edit-course ${theme}`}>\r\n            <div className=\"edit-course__wrapper\">\r\n                <span\r\n                    data-tooltip=\"Cancel\"\r\n                    className=\"tooltip bottom cancel\"\r\n                    onClick={() => setIsEditing(false)}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        style={{ display: \"block\" }}\r\n                        icon={faXmark}\r\n                    />\r\n                </span>\r\n                <Formik\r\n                    initialValues={course}\r\n                    onSubmit={handleFormSubmit}\r\n                    validationSchema={checkoutSchema}\r\n                >\r\n                    {({\r\n                        isSubmitting,\r\n                        values,\r\n                        errors,\r\n                        isValid,\r\n                        handleBlur,\r\n                        handleChange,\r\n                        handleSubmit,\r\n                    }) => (\r\n                        <Form\r\n                            className=\"dashboard-form\"\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n                            <div\r\n                                data-error={errors.title ? errors.title : \"\"}\r\n                                className={`input-wrapper ${\r\n                                    errors.title ? \"error\" : \"\"\r\n                                }`}\r\n                            >\r\n                                <label htmlFor=\"title\">Course Title:</label>\r\n                                <Field\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={errors.title ? \"error\" : \"\"}\r\n                                    name=\"title\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Course Title\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                className={`input-wrapper ${\r\n                                    errors.description ? \"error\" : \"\"\r\n                                }`}\r\n                                data-error={\r\n                                    errors.description ? errors.description : \"\"\r\n                                }\r\n                            >\r\n                                <label htmlFor=\"description\">\r\n                                    Course Description:\r\n                                </label>\r\n                                <Field\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    className={\r\n                                        errors.description ? \"error\" : \"\"\r\n                                    }\r\n                                    name=\"description\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Course Description\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-wrapper\">\r\n                                <label htmlFor=\"durationInMinutes\">\r\n                                    Duration In Minutes:\r\n                                </label>\r\n                                <Field\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    name=\"durationInMinutes\"\r\n                                    type=\"text\"\r\n                                    disabled\r\n                                />\r\n                            </div>\r\n                            <div className=\"edit-course__wrapper__save\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    disabled={\r\n                                        !isValid ||\r\n                                        isSubmitting ||\r\n                                        JSON.stringify(course) ===\r\n                                            JSON.stringify(values)\r\n                                    }\r\n                                >\r\n                                    Update\r\n                                </button>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst checkoutSchema = yup.object().shape({\r\n    title: yup\r\n        .string()\r\n        .max(65, \"Title length must not exceed 65 characters\")\r\n        .required(\"Course Title cannot be empty\"),\r\n    description: yup.string().required(\"Required\"),\r\n});\r\n\r\nexport default EditCourse;\r\n"],"names":["checkoutSchema","yup","shape","title","max","required","description","_ref","course","setIsEditing","setRefresh","theme","useTheme","accessToken","useAccessToken","_jsx","className","concat","children","_jsxs","onClick","FontAwesomeIcon","style","display","icon","faXmark","Formik","initialValues","onSubmit","values","Promise","resolve","reject","fetch","process","id","method","headers","body","JSON","stringify","then","response","ok","console","log","prev","Error","catch","error","validationSchema","_ref2","isSubmitting","errors","isValid","handleBlur","handleChange","handleSubmit","Form","htmlFor","Field","onChange","onBlur","name","type","placeholder","disabled"],"sourceRoot":""}